{"config":{"lang":["en","zh"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"STM32 MCU EDGE INTELLIGENCE NODE","text":"<p>This project dedicates to the development of a MCU edge intelligence node based on STM32. If you are interested in this project, please star it and stay tuned.</p> <p></p>"},{"location":"ABOUT/about/","title":"STM32 MCU EDGE INTELLIGENCE NODE","text":"<p>This project dedicates to the development of a MCU edge intelligence node based on STM32. If you are interested in this project, please star it and stay tuned.</p> <p></p>"},{"location":"ARCHITECTURE/architecture/","title":"ARCHITECTURE","text":""},{"location":"ARCHITECTURE/architecture/#hardware-architecture","title":"HARDWARE ARCHITECTURE","text":"<p>MAIN CONTROL + PERCEPTION + COMMUNICATION + INTERFACING</p>"},{"location":"ARCHITECTURE/architecture/#software-architecture","title":"SOFTWARE ARCHITECTURE","text":"<p>PHYSICAL LAYER -&gt; DRIVER LAYER -&gt; MIDWARE LAYER -&gt; APPLICATION LAYER</p>"},{"location":"ARCHITECTURE/architecture/#dev-toolchain","title":"DEV TOOLCHAIN","text":"<p>INITIALIZATION: STM32CUBEMX</p> <p>PROGRAMMING: KEIL5/VSCODE</p>"},{"location":"COMMUNICATION/communication/","title":"COMMUNICATION","text":""},{"location":"COMPUTATION/computation/","title":"COMPUTATION","text":"<p>This section is dedicated for onboard computation and intelligence.</p>"},{"location":"COMPUTATION/CMSIS-DSP/cmsis-dsp/","title":"CMSIS-DSP FOR DIGITAL SIGNAL PROCESSING","text":""},{"location":"COMPUTATION/CMSIS-NN/cmsis-nn/","title":"CMSIS-NN FOR NEURAL NETWORKS","text":""},{"location":"INTERFACING/interfacing/","title":"INTERFACING","text":""},{"location":"MAIN-CONTROL/main-control/","title":"MAIN CONTROL","text":""},{"location":"MAIN-CONTROL/main-control/#main-control-overview","title":"MAIN CONTROL OVERVIEW","text":"<ul> <li> <p> product link on Taobao</p> <p>Product link on Taobao</p> <p>  Purchase Link </p> </li> </ul>"},{"location":"MAIN-CONTROL/main-control/#onboard-resources","title":"ONBOARD RESOURCES","text":"<ul> <li>MAIN FREQUENCY: 480MHz</li> <li>RAM: 1MB (BUILT-IN)</li> <li>ROM: 2MB (BUILT-IN)</li> <li>SDRAM: 32MB (16BIT) WINBOND W9825G6KH-6I</li> <li>FLASH: 8MB (QSPI) WINBOND W25Q64</li> <li>TF CARD: 32GB (MAXIMUM) (BY TEST, LARGER CAPACITY IS SUPPORTED)</li> <li>LED: 1 PWR; 1 PROGRAMMABLE</li> <li>BUTTON: 1 RESET; 1 BOOT</li> <li>USB: TYPE-C</li> <li>PINS: 2.54MM PITCH, 2x2x28PINS</li> </ul>"},{"location":"MAIN-CONTROL/main-control/#mechanical-dimensions","title":"MECHANICAL DIMENSIONS","text":""},{"location":"MAIN-CONTROL/main-control/#circuit-diagram","title":"CIRCUIT DIAGRAM","text":""},{"location":"MAIN-CONTROL/BSP/bsp/","title":"BOARD SUPPORT PACKAGE (BSP)","text":""},{"location":"MAIN-CONTROL/BSP/bsp/#introduction-of-the-bsp","title":"INTRODUCTION OF THE BSP","text":"<p>To facilitate the development and transplantation of the main control board, I have prepared a BSP consisting a series of useful drivers and libraries. The BSP is based on the STM32Cube HAL library and is compatible with STM32H7 series microcontrollers, if you want you can modify it to fit other series. The BSP includes the following modules:</p> <ul> <li>bsp_init: The controlling module for all BSP modules.</li> <li>iled: The driver for the LED.</li> <li>iusart: The driver for the USART, mainly for serial communication.</li> <li>isdram: The low-level driver for the SDRAM.</li> <li>imemory: The memory management module.</li> <li>isdcard: The driver for the SD card.</li> <li>ifile: The file system module.</li> <li>...</li> </ul> <p>Tip</p> <p>The tutorial is written in a section-by-section manner, but in practice, the users can set up all required configuration in STM32CUBEMX in one go and then move forward to Keil or VSCode programming. Users can transplant the BSP from the library (link attached below) and incorporate it into their projects accordingly.</p> <ul> <li> <p> MCU_BSP</p> <p>MCU BSP BASED ON STM32</p> <p>  Github Repo </p> </li> </ul>"},{"location":"MAIN-CONTROL/BSP/bsp/#setup-your-keil-for-better-experience","title":"SETUP YOUR KEIL FOR BETTER EXPERIENCE","text":"<p>Open 'Options for Target' and conduct the following settings:</p>"},{"location":"MAIN-CONTROL/BSP/bsp/#use-ac6-compiler","title":"USE AC6 COMPILER","text":"<p>Since this is a new project, every thing is started with the AC6 compiler. We can use AC6 for compiling and debugging, which is much faster than the AC5 compiler.</p>"},{"location":"MAIN-CONTROL/BSP/bsp/#reset-and-run","title":"RESET AND RUN","text":"<p>Select the 'Debug' tab, and at the right upper corner, select 'Settings'. In the 'Flash and Download' tab, select 'Reset and Run' to automatically reset and run the program after downloading the program to the board. This is very handy for programming and debugging.</p>"},{"location":"MAIN-CONTROL/BSP/bsp/#how-to-integrate-the-bsp-into-your-project","title":"HOW TO INTEGRATE THE BSP INTO YOUR PROJECT","text":""},{"location":"MAIN-CONTROL/BSP/bsp/#setp1-download-the-bsp","title":"SETP1: DOWNLOAD THE BSP","text":"<p>Clone the BSP git repository to your local workspace.</p> <pre><code>git clone https://github.com/Shuaiwen-Cui/MCU_BSP.git\n</code></pre>"},{"location":"MAIN-CONTROL/BSP/bsp/#step2-move-the-bsp-to-your-project","title":"STEP2: MOVE THE BSP TO YOUR PROJECT","text":"<p>Only pick the ''STM32-HAL-CUBEMX' folder and move it to your project directory.</p>"},{"location":"MAIN-CONTROL/BSP/bsp/#step3-include-the-bsp-in-your-project","title":"STEP3: INCLUDE THE BSP IN YOUR PROJECT","text":"<p>Open Keil, select 'Options for Target' -&gt; 'C/C++' -&gt; 'Include Paths', add each respective path of the BSP modules into your project include paths.</p>"},{"location":"MAIN-CONTROL/BSP/bsp/#step4-add-the-bsp-modules-to-your-project","title":"STEP4: ADD THE BSP MODULES TO YOUR PROJECT","text":"<p>Open 'Manage Project Items', add respective modules into your project. </p> <p>Tip</p> <p>When you add them files, change the file type to 'All Types' to incorporate both the '.h' and '.c' files into the project for convenience.</p>"},{"location":"MAIN-CONTROL/BSP/bsp/#setp5-include-the-header-files-and-call-the-bsp_init-function","title":"SETP5: INCLUDE THE HEADER FILES AND CALL THE BSP_INIT FUNCTION","text":"<p>In the main function, include the 'bsp_init.h' file and call the 'BSP_Init()' function in the main function to initialize all the BSP modules. </p> <p>Tip</p> <p>When modifying the code, do remember to place your codes between the 'USER CODE BEGIN' and 'USER CODE END' tags to avoid being overwritten by the STM32CubeMX.</p>"},{"location":"MAIN-CONTROL/BSP/bsp/#introduction-for-bsp_init","title":"INTRODUCTION FOR BSP_INIT","text":"<p>Note</p> <p>To efficiently manage the BSP modules, I have created a controlling module called 'bsp_init'. The 'bsp_init' module is responsible for initializing all the BSP modules and setting up the necessary configurations. The 'bsp_init' module is the first user module to be called in the main function. </p> <p>Let's take a look at the 'bsp_init' module:</p>"},{"location":"MAIN-CONTROL/BSP/bsp/#bsp_inith","title":"bsp_init.h","text":"<pre><code>/**\n * @file bsp_init.h\n * @author SHUAIWEN CUI (SHUAIWEN001 AT e DOT ntu DOT edu DOT sg)\n * @brief This file contains the headers of the BSP initialization functions.\n * @version 1.0\n * @date 2024-07-12\n *\n * @copyright Copyright (c) 2024\n *\n */\n#ifndef BSP_INIT_H\n#define BSP_INIT_H\n\n#define BSP_INIT_SUCCESS 0\n#define BSP_INIT_FAIL 1\n\n#define BSP_INIT_TEST // test required for the BSP initialization, comment this out to disable the test\n\n/**\n * @name Modules To Be Enabled\n * @brief This section is to determine the modules to be included in the project\n * ! This is where you configure the modules to be included in the project\n * @param MODULE_ENABLE_LED //! Enable LED module\n * @param MODULE_ENABLE_KEY //! Enable Key module (No use in this project, do not enable it)\n * @param MODULE_ENABLE_USART1 //! Enable USART1 module for serial communication\n * @param MODULE_ENABLE_SDRAM //! Enable SDRAM module to use external RAM for computation\n * @param MODULE_ENABLE_MEMORY //! Enable Memory module - for memory management on SDRAM\n * @param MODULE_ENABLE_SDCARD //! Enable SD Card module test - for SD Card basic io. !!! This module can not be used together with MODULE_ENABLE_FILE\n * @param MODULE_ENABLE_FILE //! Enable File module test - for file operations on SD Card !!! This module can not be used together with MODULE_ENABLE_SDCARD\n */\n\n#define MODULE_ENABLE_LED // Enable LED module\n// #define MODULE_ENABLE_KEY  // Enable Key module\n#define MODULE_ENABLE_USART1 // Enable USART1 module\n#define MODULE_ENABLE_SDRAM  // Enable SDRAM module\n#define MODULE_ENABLE_MEMORY // Enable Memory module - for memory management on SDRAM\n// #define MODULE_ENABLE_SDCARD // Enable SD Card module\n#define MODULE_ENABLE_FILE   // Enable File module - for file operations on SD Card\n\n/**\n * @name Include Files\n *\n */\n#include &lt;stdio.h&gt;\n#ifdef MODULE_ENABLE_LED\n\n#include \"iled.h\"\n\n#endif\n\n#ifdef MODULE_ENABLE_KEY\n\n#include \"ikey.h\"\n\n#endif\n\n#ifdef MODULE_ENABLE_USART1 //! Note - Do rember to check the MicroLib option in the project settings\n\n#include &lt;stdio.h&gt;\n#include \"iusart.h\"\n\n#endif\n\n#ifdef MODULE_ENABLE_SDRAM\n\n#include \"isdram.h\"\n\n#endif\n\n#ifdef MODULE_ENABLE_MEMORY\n\n#include \"imemory.h\"\n\n#endif\n\n#ifdef MODULE_ENABLE_SDCARD\n\n#include \"isdcard.h\"\n\n#endif\n\n#ifdef MODULE_ENABLE_FILE\n\n#include \"ifile.h\"\n\n#endif\n\n/**\n * @name Function Prototypes\n *\n */\n\n// The BSP initialization function - including all the initialization functions\nint BSP_Init();\n\n#ifdef MODULE_ENABLE_USART1\n// IO retargetting\nint fputc(int ch, FILE *f);\nint fgetc(FILE *f);\n#endif\n\n#endif /* BSP_INIT_H */\n</code></pre>"},{"location":"MAIN-CONTROL/BSP/bsp/#bsp_initc","title":"bsp_init.c","text":"<pre><code>/**\n * @file bsp_init.c\n * @author SHUAIWEN CUI (SHUAIWEN001 AT e DOT ntu DOT edu DOT sg)\n * @brief\n * @version 1.0\n * @date 2024-07-12\n *\n * @copyright Copyright (c) 2024\n *\n */\n#include \"bsp_init.h\"\n\n/**\n * @name VARIABLES\n * \n */\n// The gap between the initialization of each module, in ms.\nint Init_Gap = 500;\n\n/**\n * @name BSP_Init\n * @brief board support package initialization\n * @param None\n * @retval 0\n *\n */\nint BSP_Init(void)\n{\n    // Variables\n    int i;\n#ifdef MODULE_ENABLE_LED\n    // BSP Initialization - LED - flash once to indicate OK\n    LED(0); // for deployment, switch off the LED to save power\n#ifdef BSP_INIT_TEST // for debugging, flash the LED to indicate status\n    LED(1);\n    HAL_Delay(200);\n    LED(0);\n    HAL_Delay(200);\n    LED(1);\n#endif\n#endif\n\n#ifdef MODULE_ENABLE_KEY\n    // BSP Initialization - Key\n    // nothing required\n#endif\n\n    HAL_Delay(2*Init_Gap); // to give the user enough time to connect to the serial terminal\n\n#ifdef MODULE_ENABLE_USART1\n#ifdef BSP_INIT_TEST\n    // Initialization - Count Down\n    for (i = 0; i &lt; 5; i++)\n    {\n        printf(\"[INITIALIZATION] Count Down for Upcoming Testing: %d \\n\\r\", 5 - i);\n        HAL_Delay(1000);\n    }\n    printf(\"\\n\\r\");\n#endif\n    // BSP Initialization - Serial Communication\n    MCU_serial_init();\n    printf(\"[INITIALIZATION] Serial Communication - SUCCESS\\n\\r\\n\\r\");\n    // MCU_printf(\"Serial Communication - SUCCESS\\n\\r\"); // not working\n#endif\n\n    HAL_Delay(Init_Gap);\n\n#ifdef MODULE_ENABLE_SDRAM\n    // BSP Initialization - SDRAM\n    printf(\"[INITIALIZATION] SDRAM Initialization - START\\n\\r\");\n    SDRAM_InitSequence();\n    printf(\"[INITIALIZATION] SDRAM Initialization - FINISHED\\r\\n\\n\\r\");\n#ifdef BSP_INIT_TEST\n    if (SDRAM_Test() == 0)\n    {\n        printf(\"[INITIALIZATION] SDRAM TEST - SUCCESS\\r\\n\\n\\r\");\n    }\n    else\n    {\n        printf(\"[INITIALIZATION] SDRAM TEST - FAIL\\r\\n\\n\\r\");\n    }\n#endif\n#endif\n\n    HAL_Delay(Init_Gap);\n\n#ifdef MODULE_ENABLE_MEMORY\n    // BSP Initialization - Memory Management\n    printf(\"[INITIALIZATION] Memory Management Initialization - START\\n\\r\");\n    memory_init();\n    printf(\"[INITIALIZATION] Memory Management Initialization - FINISHED\\n\\r\\n\\r\");\n#ifdef BSP_INIT_TEST\n    printf(\"[INITIALIZATION] Memory Management Test - START\\n\\r\");\n    if (memory_management_test() == 0)\n    {\n        printf(\"[INITIALIZATION] Memory Management Test - SUCCESS\\n\\r\\n\\r\");\n    }\n    else\n    {\n        printf(\"[INITIALIZATION] Memory Management Test - FAIL\\n\\r\\n\\r\");\n    }\n#endif\n#endif\n\n    HAL_Delay(Init_Gap);\n\n#ifdef MODULE_ENABLE_SDCARD\n\n    // BSP Initialization - SD Card\n    printf(\"[INITIALIZATION] SD Card Initialization - START.\\n\\r\");\n    SD_Init();\n#ifdef BSP_INIT_TEST\n    // SD Card Test\n    printf(\"[INITIALIZATION] SD Card Test - START.\\n\\r\");\n    SD_Test();\n    printf(\"[INITIALIZATION] SD Card Test - FINISHED.\\n\\r\");\n#endif\n    printf(\"[INITIALIZATION] SD CARD Initialization - FINISHED.\\n\\r\");\n#endif\n\n    HAL_Delay(Init_Gap);\n\n#ifdef MODULE_ENABLE_FILE // the test is kept outside the test zone, as sd card hard conenction is not quite stable, and we need the test to ensure the connection is okay\n\n    printf(\"[INITIALIZATION] SD Card File IO Initialization and Test - START.\\n\\r\");\n    printf(\"\\n\\r\");\n\n    // mount the file system\n    printf(\"[INITIALIZATION] Mounting the file system.\\n\\r\");\n    Mount_FatFs();\n    printf(\"\\n\\r\");\n\n    // get disk information\n    printf(\"[INITIALIZATION] Getting disk information.\\n\\r\");\n    FatFs_GetDiskInfo();\n    printf(\"\\n\\r\");\n\n    // scan the directory\n    printf(\"[INITIALIZATION] Scanning the directory.\\n\\r\");\n    FatFs_ScanDir(\"0:/\");\n    printf(\"\\n\\r\");\n\n    // write a text file\n    printf(\"[INITIALIZATION] Writing a text file.\\n\\r\");\n    FatFs_WriteTXTFile(\"test.txt\", 2016, 11, 15);\n    printf(\"\\n\\r\");\n\n    // read a text file\n    printf(\"[INITIALIZATION] Reading a text file.\\n\\r\");\n    FatFs_ReadTXTFile(\"test.txt\");\n    printf(\"\\n\\r\");\n\n    // get file information\n    printf(\"[INITIALIZATION] Getting file information.\\n\\r\");\n    FatFs_GetFileInfo(\"test.txt\");\n    printf(\"\\n\\r\");\n\n    // delete a file\n    printf(\"[INITIALIZATION] Deleting a file.\\n\\r\");\n    FatFs_DeleteFile(\"test.txt\");\n    printf(\"\\n\\r\");\n\n#ifdef BSP_INIT_TEST\n\n#endif\n    printf(\"[INITIALIZATION] SD Card File IO Initialization and Test - FINISHED.\\n\\r\\n\\r\");\n    HAL_Delay(Init_Gap);\n\n#endif\n\n\n#ifdef MODULE_ENABLE_USART1\n    printf(\"[INITIALIZATION] BSP Initialization - FINISHED\\n\\r\");\n    printf(\"\\n\\r\");\n#endif\n\n    return BSP_INIT_SUCCESS;\n}\n\n#ifdef MODULE_ENABLE_USART1\n\n// MicroLib needed for retargetting\n// retarget fputc for printf\nint fputc(int ch, FILE *f)\n{\n    uint8_t temp = (uint8_t)ch;\n    HAL_UART_Transmit(&amp;huart1, &amp;temp, 1, HAL_MAX_DELAY);\n    return ch;\n}\n\n// retarget fgetc for scanf\nint fgetc(FILE *f)\n{\n    while (__HAL_UART_GET_FLAG(&amp;huart1, UART_FLAG_RXNE) == RESET)\n        ;                                      // Wait until the data is received\n    return (int)(huart1.Instance-&gt;RDR &amp; 0xFF); // Read the received data\n}\n#endif\n</code></pre>"},{"location":"MAIN-CONTROL/BSP/bsp/#explanation-of-the-bsp_init-module","title":"EXPLANATION OF THE BSP_INIT MODULE","text":"<p>As can be seen, almost all bsp modules are configured in this module.  You can determine which module to activate or deactivate by commenting out the respective module:</p> <ul> <li>MODULE_ENABLE_LED: Enable the LED module.</li> <li>MODULE_ENABLE_KEY: Enable the Key module. Note that this module is not used in this project as there is no programmable key on this board. Do not enable it.</li> <li>MODULE_ENABLE_USART1: Enable the USART1 module for serial communication. If you enable this, the retargetting functions for printf and scanf will be activated automatically as defined in the module.</li> <li>MODULE_ENABLE_SDRAM: Enable the SDRAM module to use external RAM for computation.</li> <li>MODULE_ENABLE_MEMORY: Enable the Memory module for memory management on SDRAM.</li> <li>MODULE_ENABLE_SDCARD: Enable the SD Card module test for SD Card basic IO. Note that this module cannot be used together with MODULE_ENABLE_FILE. </li> <li>MODULE_ENABLE_FILE: Enable the File module test for file operations on the SD Card. Note that this module cannot be used together with MODULE_ENABLE_SDCARD.</li> </ul>"},{"location":"MAIN-CONTROL/BSP/bsp/#recommended-configuration-for-bsp_init-module","title":"RECOMMENDED CONFIGURATION FOR BSP_INIT MODULE","text":"<p>The following table is the recommended configuration for the BSP_INIT module:</p> Module Name Configuration MODULE_ENABLE_LED \u2705Enable MODULE_ENABLE_KEY \u274cDisable MODULE_ENABLE_USART1 \u2705Enable MODULE_ENABLE_SDRAM \u2705Enable MODULE_ENABLE_MEMORY \u2705Enable MODULE_ENABLE_SDCARD \u274cDisable MODULE_ENABLE_FILE \u2705Enable"},{"location":"MAIN-CONTROL/BSP/bsp/#module-test","title":"MODULE TEST","text":"<p>To facilitate the assessment of the configured modules, there is a MICRO 'BSP_INIT_TEST' defined in the .h file. This test is used to test the initialization of each module. If you want to disable the test to save time, you can comment out the 'BSP_INIT_TEST' in the .h file.</p>"},{"location":"MAIN-CONTROL/FILE-SYS/file-sys/","title":"FILE SYSTEM","text":"<p>Info</p> <p>File system is a method of storing and organizing computer files and their data. Here, we will use the FatFs library to interface with the SD card.</p>"},{"location":"MAIN-CONTROL/FILE-SYS/file-sys/#file-system-as-a-middleware","title":"FILE SYSTEM AS A MIDDLEWARE","text":"<p>In STM32CUBEMX, FATFS is already incorporated into the software as a middleware. To enable FATFS, go to the 'Middleware' tab and enable the 'FATFS' middleware.</p>"},{"location":"MAIN-CONTROL/FILE-SYS/file-sys/#file-system-configuration","title":"FILE SYSTEM CONFIGURATION","text":"<p>As shown, select FATFS for SD card, and enable the long file name support. </p> <p></p> <p>Then, under the Advanced Settings, select the DMA template for the SD card.</p>"},{"location":"MAIN-CONTROL/FILE-SYS/file-sys/#generate-and-update-code","title":"GENERATE AND UPDATE CODE","text":"<p>Finally, let's generate the code to save the current progress and to make it ready for following programming steps. Click the 'Generate Code' button at the top right corner of the screen.</p>"},{"location":"MAIN-CONTROL/FMC/fmc/","title":"FMC","text":"<p>Info</p> <p>FMC stands for Flexible Memory Controller. It is a feature that allows the MCU to interface with external memory devices such as SDRAM, SRAM, and NOR Flash. </p>"},{"location":"MAIN-CONTROL/FMC/fmc/#fmc-setup","title":"FMC SETUP","text":"<p>As shown, in the 'Connectivity' tab, enable FMC, and then enable the SDRAM device in FMC configuration zone, and set the parameters according to the datasheet of the SDRAM device.</p>"},{"location":"MAIN-CONTROL/FMC/fmc/#sdram","title":"SDRAM","text":"<p>SDRAM is one of the most common types of external memory devices that can be interfaced with the MCU using the FMC. It is a type of volatile memory that is used in computers and other electronic devices. Here, since the built-in RAM is only 1MB, and not enough for some applications, we need to use external SDRAM to expand the memory capacity.</p>"},{"location":"MAIN-CONTROL/FMC/fmc/#generate-and-update-code","title":"GENERATE AND UPDATE CODE","text":"<p>Finally, let's generate the code to save the current progress and to make it ready for following programming steps. Click the 'Generate Code' button at the top right corner of the screen.</p>"},{"location":"MAIN-CONTROL/LED/led/","title":"LED","text":""},{"location":"MAIN-CONTROL/LED/led/#led-circuit-design","title":"LED CIRCUIT DESIGN","text":""},{"location":"MAIN-CONTROL/LED/led/#configure-the-pin","title":"CONFIGURE THE PIN","text":""},{"location":"MAIN-CONTROL/LED/led/#select-and-set-pin-mode","title":"SELECT AND SET PIN MODE","text":"<p>According to the circuit design, select the corresponding pin PH7 and set the mode to \"GPIO Output\".</p>"},{"location":"MAIN-CONTROL/LED/led/#gpio-setting","title":"GPIO SETTING","text":"<p>In the leftmost pane, select the \"GPIO\" tab and set the parameters for PH7 as shown in the figure below.</p> <ul> <li>GPIO OUTPUT LEVEL: LOW</li> </ul> <p>Info</p> <p>As can be seen from the circuit design, low level output can light up the LED and high level output can turn off the LED.</p> <ul> <li>GPIO MODE: Output</li> </ul> <p>Here, we set the pin mode to \"Output\" as we use it as a control for LED.</p> <ul> <li>GPIO PULL-UP/PULL-DOWN: PULL-UP</li> </ul> <p>Info</p> <p>The pull-up resistor is used to ensure that the pin is in a high state when it is not connected to the ground.</p> <ul> <li>GPIO SPEED: Very High</li> </ul> <p>Info</p> <p>The speed of the GPIO pin means the speed at which the pin changes from one state to another. Here, we set it to \"Very High\" to ensure that the LED can be turned on and off quickly. This is no strict requirement for the speed setting of the LED pin, but it is recommended to set it to \"Very High\" for better performance.</p> <ul> <li>USER LABEL: LED</li> </ul> <p>Info</p> <p>The user label is used to mark the pin for easy identification. Here, we set it to \"LED\" to indicate that this pin is used to control the LED.</p>"},{"location":"MAIN-CONTROL/LED/led/#generate-and-update-code","title":"GENERATE AND UPDATE CODE","text":"<p>Finally, let's generate the code to save the current progress and to make it ready for following programming steps. Click the 'Generate Code' button at the top right corner of the screen.</p>"},{"location":"MAIN-CONTROL/MEMORY/memory/","title":"MEMORY MANAGEMENT","text":""},{"location":"MAIN-CONTROL/RTOS/rtos/","title":"REAL TIME OPERATING SYSTEM (RTOS)","text":"<p>To be updated.</p>"},{"location":"MAIN-CONTROL/SDCARD/sdcard/","title":"SDCARD","text":"<p>Info</p> <p>SDCARD is the abbreviation of Secure Digital Memory Card. It is a type of non-volatile memory card used in computers and other electronic devices. Here, we will use the SDMMC peripheral to interface with the SD card.</p>"},{"location":"MAIN-CONTROL/SDCARD/sdcard/#sdcard-circuit","title":"SDCARD CIRCUIT","text":""},{"location":"MAIN-CONTROL/SDCARD/sdcard/#sdcard-configuration","title":"SDCARD CONFIGURATION","text":"<p>To enable SDCARD, we need to enable SDMMC for this development board. For some other development boards, you may need to enable the SDMMC peripheral.</p> <p>For SDMMC configuration, refer to SDMMC tab.</p>"},{"location":"MAIN-CONTROL/SDCARD/sdcard/#sdcard-gpio","title":"SDCARD GPIO","text":"<p>For SD card, we can use the default GPIO pins. However, you can change the GPIO pins according to your requirements.</p>"},{"location":"MAIN-CONTROL/SDCARD/sdcard/#generate-and-update-code","title":"GENERATE AND UPDATE CODE","text":"<p>Finally, let's generate the code to save the current progress and to make it ready for following programming steps. Click the 'Generate Code' button at the top right corner of the screen.</p>"},{"location":"MAIN-CONTROL/SDMMC/sdmmc/","title":"SDMMC","text":"<p>Info</p> <p>SDMMC stands for Secure Digital Memory Card. It is a type of non-volatile memory card that is used in computers and other electronic devices. Here, we will use the SDMMC peripheral to interface with an SD card.</p>"},{"location":"MAIN-CONTROL/SDMMC/sdmmc/#enable-sdmmc","title":"ENABLE SDMMC","text":"<p>As shown, in the 'Connectivity' tab, enable the SDMMC peripheral. Note that, the divider is set to 2. Note that, at this time, you may need to reconfigure the clock settings in the 'Clock Configuration' tab.</p>"},{"location":"MAIN-CONTROL/SDMMC/sdmmc/#enable-mdma","title":"ENABLE MDMA","text":"<p>Info</p> <p>MDMA stands for Memory Direct Memory Access. It is a type of DMA that is used to transfer data between memory and memory. Here, we will use MDMA to transfer data between the SD card and the SDRAM.</p>"},{"location":"MAIN-CONTROL/SDMMC/sdmmc/#enable-nvic","title":"ENABLE NVIC","text":"<p>As shown, in the 'NVIC Settings' tab, enable the SDMMC interrupt.</p>"},{"location":"MAIN-CONTROL/SDMMC/sdmmc/#nvic-configuration","title":"NVIC CONFIGURATION","text":"<p>So far, the NVIC settings are as shown. </p>"},{"location":"MAIN-CONTROL/SDMMC/sdmmc/#generate-and-update-code","title":"GENERATE AND UPDATE CODE","text":"<p>Finally, let's generate the code to save the current progress and to make it ready for following programming steps. Click the 'Generate Code' button at the top right corner of the screen.</p>"},{"location":"MAIN-CONTROL/SDRAM/sdram/","title":"SDRAM","text":"<p>Info</p> <p>SDRAM stands for Synchronous Dynamic Random Access Memory. It is a type of volatile memory that is used in computers and other electronic devices. Here, since the built-in RAM is only 1MB, and not enough for some applications, we need to use external SDRAM to expand the memory capacity.</p>"},{"location":"MAIN-CONTROL/SDRAM/sdram/#sdram-circuit","title":"SDRAM CIRCUIT","text":"<p>Please carefully compare the pin design with the pin setup in CUBEMX, ensure that the pin configuration is consistent with the hardware connection. In our case, only PH2, PH3, and PH5 are not consistent, so we can manually set up them in the chip view on the right hand side and set them to their respective functions as designed.</p>"},{"location":"MAIN-CONTROL/SDRAM/sdram/#sdram-parameters","title":"SDRAM PARAMETERS","text":"<p>The SDRAM Module we are using is WINBOND W9825G6KH-6I. You can find the datasheet here. The parameters are calculated according to the datasheet.</p>"},{"location":"MAIN-CONTROL/SDRAM/sdram/#gpio-configuration","title":"GPIO CONFIGURATION","text":"<p>Check the pin configuration. Compare the setup in CUBEMX with the pin design.</p>"},{"location":"MAIN-CONTROL/SDRAM/sdram/#generate-and-update-code","title":"GENERATE AND UPDATE CODE","text":"<p>Finally, let's generate the code to save the current progress and to make it ready for following programming steps. Click the 'Generate Code' button at the top right corner of the screen.</p>"},{"location":"MAIN-CONTROL/SETUP/setup/","title":"SETUP","text":"<p>Note</p> <p>'SETUP' serves as the first step to set up the main control system, which enables many fundamental functions to facilitate the operation of the system. This section focuses on basic setup for the main control board.</p>"},{"location":"MAIN-CONTROL/SETUP/setup/#hardware-preparation","title":"HARDWARE PREPARATION","text":"<p>To program the main control board, we need three components:</p> <ul> <li>The main control board -  the development board that embeds the MCU</li> <li>A USB-TTL adapter - to connect the main control board to the computer</li> <li>A DEBUGGER (ST-LINK V2, J-LINK, etc.) - to program the main control board</li> </ul>"},{"location":"MAIN-CONTROL/SETUP/setup/#component-1-the-main-control-board-fanke743","title":"COMPONENT 1 - The Main Control Board - FANKE743","text":"<ul> <li> <p> product link</p> <p>Product link</p> <p>  Purchase Link </p> </li> </ul>"},{"location":"MAIN-CONTROL/SETUP/setup/#component-2-usb-ttl-adapter","title":"COMPONENT 2 - USB-TTL Adapter","text":"<ul> <li> <p> product link</p> <p>Product link</p> <p>  Purchase Link </p> </li> </ul>"},{"location":"MAIN-CONTROL/SETUP/setup/#component-3-debugger","title":"COMPONENT 3 - Debugger","text":"<ul> <li> <p> product link</p> <p>Product link</p> <p>  Purchase Link </p> </li> </ul> <p>Info</p> <p>CMSIS-DAP, ST-LINK, and J-LINK are the most commonly used debuggers. Any of these debuggers can be used to program the main control board.</p>"},{"location":"MAIN-CONTROL/SETUP/setup/#hardware-connection","title":"HARDWARE CONNECTION","text":"<p>Connect the three components as shown in the figure above. Then connect the USB-TTL adapter and the debugger to the computer.</p>"},{"location":"MAIN-CONTROL/SETUP/setup/#software-preparation","title":"SOFTWARE PREPARATION","text":""},{"location":"MAIN-CONTROL/SETUP/setup/#stm32cubemx","title":"STM32CUBEMX","text":"<p>STM32CUBEMX is a graphical tool that allows configuring the STM32 microcontroller very easily and generating the corresponding initialization C code through a step-by-step process. Download and install STM32CubeMX from the official website.</p>"},{"location":"MAIN-CONTROL/SETUP/setup/#keil-mdk","title":"KEIL MDK","text":"<p>KEIL MDK is a complete software development environment for a wide range of ARM Cortex-M based microcontroller devices. Download and install KEIL MDK from the official website.</p>"},{"location":"MAIN-CONTROL/SETUP/setup/#software-setup","title":"SOFTWARE SETUP","text":""},{"location":"MAIN-CONTROL/SETUP/setup/#create-a-new-project-in-stm32cubemx","title":"CREATE A NEW PROJECT IN STM32CUBEMX","text":""},{"location":"MAIN-CONTROL/SETUP/setup/#new-project","title":"New Project","text":"<p>Open STM32CubeMX and click the 'File' tab and then click the option 'New Project'.</p>"},{"location":"MAIN-CONTROL/SETUP/setup/#select-mcu-series-and-model","title":"Select MCU Series and Model","text":"<p>Select the MCU series and the MCU model. Then click 'Start Project'.</p>"},{"location":"MAIN-CONTROL/SETUP/setup/#enable-memory-protection-unit-mpu","title":"Enable Memory Protection Unit (MPU)","text":"<p>Enable the 'Memory Protection Unit' and click 'YES'.</p>"},{"location":"MAIN-CONTROL/SETUP/setup/#configure-project-information-and-code-generation","title":"Configure Project Information and Code Generation","text":"<p>Setup the project information and code generation configuration first as shown in the above figures.Then click 'Generate Code'.</p>"},{"location":"MAIN-CONTROL/SETUP/setup/#system-configuration","title":"SYSTEM CONFIGURATION","text":"<p>Let's go back to the Pinout &amp; Configuration tab and configure the system as shown below.</p>"},{"location":"MAIN-CONTROL/SETUP/setup/#system-core-sys-timebase-source","title":"System Core - SYS: Timebase Source","text":"<p>Select the 'SYS' tab and then select the 'Timebase Source' as 'SysTick'.</p>"},{"location":"MAIN-CONTROL/SETUP/setup/#system-core-rcc-high-speed-clock-hse-low-speed-clock-lse","title":"System Core - RCC: High Speed Clock (HSE) &amp; Low Speed Clock (LSE)","text":"<p>Select the 'RCC' tab and configure the 'High Speed Clock (HSE)' and 'Low Speed Clock (LSE)' as shown in the above figure. Both of them are set to 'Crystal/Ceramic Resonator'. Generally speaking, the external crystal oscillators are more accurate than the internal RC oscillators.</p>"},{"location":"MAIN-CONTROL/SETUP/setup/#system-core-coretex_m7-enable-i-cache-d-cache-mpu","title":"System Core - CORETEX_M7: Enable I-Cache &amp; D-Cache &amp; MPU","text":"<p>Select the 'CORETEX_M7' tab and enable the 'I-Cache', 'D-Cache', and 'MPU' as shown in the above figure. Some advanced features require the I-Cache, D-Cache, and MPU to be enabled, e.g., X-CUBE-AI. </p>"},{"location":"MAIN-CONTROL/SETUP/setup/#timer-rtc-enable-rtc","title":"Timer - RTC: Enable RTC","text":"<p>Select the 'RTC' tab and enable the 'RTC' as shown in the above figure. The RTC is a real-time clock that can be used to keep track of the current time and date. Here, we enable RTC for future potential applications.</p>"},{"location":"MAIN-CONTROL/SETUP/setup/#trace-and-debug-debug-enable-serial-wire","title":"Trace and Debug - DEBUG: Enable Serial Wire","text":"<p>Select the 'DEBUG' tab and enable the 'Serial Wire' as shown in the above figure. The Serial Wire is a debug interface that allows the debugger to communicate with the MCU.</p>"},{"location":"MAIN-CONTROL/SETUP/setup/#clock-configuration","title":"Clock Configuration","text":"<p>Configure the clock as shown in the above figure. The clock configuration is crucial for the MCU to operate correctly.</p> <p>Note</p> <p>So far, we have finished the basic setup up for MCU. You can have check of all configuration again and then click 'Generate Code' to generate the initialization code for the MCU. We will continue to set up the software environment in the next section.</p> <p>Tip</p> <p>For simplicity, I did not include all the CubeMX configuration steps in this section. In stead, the configuration is divided into several sections according to the function of the configuration. In practice, one can configure all the settings in one go. </p>"},{"location":"MAIN-CONTROL/SETUP/setup/#generate-and-update-code","title":"GENERATE AND UPDATE CODE","text":"<p>Finally, let's generate the code to save the current progress and to make it ready for following programming steps. Click the 'Generate Code' button at the top right corner of the screen.</p>"},{"location":"MAIN-CONTROL/USART/usart/","title":"USART","text":"<p>USART can be used for many different purposes, and for now, only USART1 is used for serial communication.</p>"},{"location":"MAIN-CONTROL/USART/usart/#usart1-circuit","title":"USART1 CIRCUIT","text":"<p>As can be seen from the circuit design, the RX and TX for USART1 are PA9 and PA10, respectively. However, the default choices are not, so we need to change them manually at the pin configuration at the right hand side of the screen.</p>"},{"location":"MAIN-CONTROL/USART/usart/#usart1-configuration","title":"USART1 CONFIGURATION","text":""},{"location":"MAIN-CONTROL/USART/usart/#parameter-setup","title":"PARAMETER SETUP","text":"<p>Select 'Parameter Settings' to setup parameters for USART1. Let's keep the default settings for now.</p>"},{"location":"MAIN-CONTROL/USART/usart/#dma-setup","title":"DMA SETUP","text":"<p>Info</p> <p>DMA stands for Direct Memory Access. It is a feature that allows peripherals to access memory without involving the CPU. This can greatly reduce the CPU load and improve the system performance.</p> <p></p> <p>Let's create two DMA channels for USART1. One for transmitting data and the other for receiving data.</p>"},{"location":"MAIN-CONTROL/USART/usart/#nvic-setup","title":"NVIC SETUP","text":"<p>Info</p> <p>NVIC stands for Nested Vectored Interrupt Controller. It is a feature that allows the MCU to prioritize interrupts and manage them efficiently.</p> <p></p> <p>Here, let's enable the USART1 global interrupt. Note that for DMA, the interrupts are by default enabled once you enable the DMA channels.</p>"},{"location":"MAIN-CONTROL/USART/usart/#generate-and-update-code","title":"GENERATE AND UPDATE CODE","text":"<p>Finally, let's generate the code to save the current progress and to make it ready for following programming steps. Click the 'Generate Code' button at the top right corner of the screen.</p>"},{"location":"PERCEPTION/perception/","title":"SENSING","text":""},{"location":"POWER/power/","title":"POWER","text":"<p>Under primitive development, we use USB cable to power the MCU. In future, battery power will be used and power management will be implemented.</p>"},{"location":"RELEASES/releases/","title":"RELEASES","text":"<p>To faciliate different use cases, this project provides various releases. The following table lists the available releases and their respective features.</p> Release (Folder Name) Description Features Status Notes NODE-CORE-BUILDING This release focuses on the computational core development, showing the development progress of the core components. Computaitonal Core Development - Progress View \ud83c\udfd7\ufe0f Not Ready - NODE-CORE-BUILT This release focuses on the computational core development, showing the developed computational core. Computaitonal Core Development - Built View \u2705 Stable \ud83c\udfc6 Recommended NODE-CORE-RTOS-BUILDING This release focuses on the computational core development with RTOS, showing the development progress of the core components. Computaitonal Core Development with RTOS - Progress View \ud83c\udfd7\ufe0f Not Ready - NODE-CORE-RTOS-BUILT This release focuses on the computational core development with RTOS, showing the developed computational core with RTOS. Computaitonal Core Development with RTOS - Built View \ud83c\udfd7\ufe0f Not Ready -"},{"location":"blog/","title":"Blog","text":""},{"location":"zh/","title":"STM32\u5fae\u63a7\u5236\u5668\u8fb9\u7f18\u667a\u80fd\u8282\u70b9","text":"<p>\u8fd9\u4e2a\u9879\u76ee\u81f4\u529b\u4e8e\u57fa\u4e8eSTM32\u7684\u5fae\u63a7\u5236\u5668\u8fb9\u7f18\u667a\u80fd\u8282\u70b9\u7684\u5f00\u53d1\u3002\u5982\u679c\u4f60\u5bf9\u8fd9\u4e2a\u9879\u76ee\u611f\u5174\u8da3\uff0c\u8bf7\u7ed9\u4e2a\u661f\u5e76\u4fdd\u6301\u5173\u6ce8\u3002</p> <p></p>"},{"location":"zh/ABOUT/about/","title":"STM32\u5fae\u63a7\u5236\u5668\u8fb9\u7f18\u667a\u80fd\u8282\u70b9","text":"<p>\u8fd9\u4e2a\u9879\u76ee\u81f4\u529b\u4e8e\u57fa\u4e8eSTM32\u7684\u5fae\u63a7\u5236\u5668\u8fb9\u7f18\u667a\u80fd\u8282\u70b9\u7684\u5f00\u53d1\u3002\u5982\u679c\u4f60\u5bf9\u8fd9\u4e2a\u9879\u76ee\u611f\u5174\u8da3\uff0c\u8bf7\u7ed9\u4e2a\u661f\u5e76\u4fdd\u6301\u5173\u6ce8\u3002</p> <p></p>"},{"location":"zh/ARCHITECTURE/architecture/","title":"\u67b6\u6784","text":""},{"location":"zh/ARCHITECTURE/architecture/#_2","title":"\u786c\u4ef6\u67b6\u6784","text":"<p>\u4e3b\u63a7 + \u611f\u77e5 + \u901a\u4fe1 + \u4ea4\u4e92</p>"},{"location":"zh/ARCHITECTURE/architecture/#_3","title":"\u8f6f\u4ef6\u67b6\u6784","text":"<p>\u7269\u7406\u5c42 -&gt; \u9a71\u52a8\u5c42 -&gt; \u4e2d\u95f4\u4ef6\u5c42 -&gt; \u5e94\u7528\u5c42 </p>"},{"location":"zh/ARCHITECTURE/architecture/#_4","title":"\u5f00\u53d1\u5de5\u5177\u94fe","text":"<p>\u521d\u59cb\u5316\uff1a STM32CUBEMX</p> <p>\u4ee3\u7801\u7f16\u8f91\uff1a KEIL5/VSCODE</p>"},{"location":"zh/COMMUNICATION/communication/","title":"\u901a\u4fe1","text":""},{"location":"zh/COMPUTATION/computation/","title":"\u8ba1\u7b97","text":"<p>\u672c\u8282\u81f4\u529b\u4e8e\u5982\u4f55\u5728MCU\u4e0a\u8fdb\u884c\u8ba1\u7b97\u4e0e\u677f\u8f7d\u667a\u80fd\u5b9e\u73b0\u3002</p>"},{"location":"zh/COMPUTATION/CMSIS-DSP/cmsis-dsp/","title":"CMSIS-DSP \u6570\u5b57\u4fe1\u53f7\u5904\u7406\u5e93","text":""},{"location":"zh/COMPUTATION/CMSIS-NN/cmsis-nn/","title":"CMSIS-NN \u795e\u7ecf\u7f51\u7edc\u5e93","text":""},{"location":"zh/INTERFACING/interfacing/","title":"\u4ea4\u4e92","text":""},{"location":"zh/MAIN-CONTROL/main-control/","title":"\u4e3b\u63a7","text":""},{"location":"zh/MAIN-CONTROL/main-control/#_2","title":"\u4e3b\u63a7\u6982\u89c8","text":"<ul> <li> <p> \u6dd8\u5b9d\u94fe\u63a5</p> <p>\u5546\u54c1\u6dd8\u5b9d\u94fe\u63a5</p> <p>  \u8d2d\u4e70\u94fe\u63a5 </p> </li> </ul>"},{"location":"zh/MAIN-CONTROL/main-control/#_3","title":"\u677f\u8f7d\u8d44\u6e90","text":"<ul> <li>\u4e3b\u9891: 480MHz</li> <li>RAM: 1MB (\u5185\u7f6e)</li> <li>ROM: 2MB (\u5185\u7f6e)</li> <li>SDRAM: 32MB (16\u4f4d) WINBOND W9825G6KH-6I</li> <li>FLASH: 8MB (QSPI) WINBOND W25Q64</li> <li>TF\u5361: 32GB (\u6700\u5927) (\u7ecf\u6d4b\u8bd5, \u652f\u6301\u66f4\u5927\u5bb9\u91cf)</li> <li>LED: 1 PWR; 1 \u53ef\u7f16\u7a0b</li> <li>\u6309\u94ae: 1 RESET; 1 BOOT</li> <li>USB: TYPE-C</li> <li>\u5f15\u811a: 2.54mm \u95f4\u8ddd, 2x2x28\u5f15\u811a</li> </ul>"},{"location":"zh/MAIN-CONTROL/main-control/#_4","title":"\u673a\u68b0\u5c3a\u5bf8","text":""},{"location":"zh/MAIN-CONTROL/main-control/#_5","title":"\u7535\u8def\u56fe","text":""},{"location":"zh/MAIN-CONTROL/BSP/bsp/","title":"\u677f\u7ea7\u652f\u6301\u5305\uff08BSP\uff09","text":""},{"location":"zh/MAIN-CONTROL/BSP/bsp/#bsp_1","title":"BSP \u7b80\u4ecb","text":"<p>\u4e3a\u4e86\u65b9\u4fbf\u4e3b\u63a7\u677f\u7684\u5f00\u53d1\u548c\u79fb\u690d\uff0c\u6211\u51c6\u5907\u4e86\u4e00\u4e2a BSP\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u7cfb\u5217\u6709\u7528\u7684\u9a71\u52a8\u7a0b\u5e8f\u548c\u5e93\u3002BSP \u57fa\u4e8e STM32Cube HAL \u5e93\uff0c\u517c\u5bb9 STM32H7 \u7cfb\u5217\u5fae\u63a7\u5236\u5668\uff0c\u5982\u679c\u4f60\u613f\u610f\uff0c\u4f60\u53ef\u4ee5\u4fee\u6539\u5b83\u4ee5\u9002\u5e94\u5176\u4ed6\u7cfb\u5217\u3002BSP \u5305\u62ec\u4ee5\u4e0b\u6a21\u5757\uff1a</p> <ul> <li>bsp_init\uff1a\u6240\u6709 BSP \u6a21\u5757\u7684\u63a7\u5236\u6a21\u5757\u3002</li> <li>iled\uff1aLED \u9a71\u52a8\u7a0b\u5e8f\u3002</li> <li>iusart\uff1aUSART \u9a71\u52a8\u7a0b\u5e8f\uff0c\u4e3b\u8981\u7528\u4e8e\u4e32\u884c\u901a\u4fe1\u3002</li> <li>isdram\uff1aSDRAM \u4f4e\u7ea7\u9a71\u52a8\u7a0b\u5e8f\u3002</li> <li>imemory\uff1a\u5185\u5b58\u7ba1\u7406\u6a21\u5757\u3002</li> <li>isdcard\uff1aSD \u5361\u9a71\u52a8\u7a0b\u5e8f\u3002</li> <li>ifile\uff1a\u6587\u4ef6\u7cfb\u7edf\u6a21\u5757\u3002</li> <li>...</li> </ul> <p>\u63d0\u793a</p> <p>\u6559\u7a0b\u662f\u6309\u7167\u9010\u8282\u65b9\u5f0f\u7f16\u5199\u7684\uff0c\u4f46\u5728\u5b9e\u8df5\u4e2d\uff0c\u7528\u6237\u53ef\u4ee5\u5728 STM32CUBEMX \u4e2d\u4e00\u6b21\u6027\u8bbe\u7f6e\u6240\u6709\u6240\u9700\u7684\u914d\u7f6e\uff0c\u7136\u540e\u7ee7\u7eed\u8fdb\u884c Keil \u6216 VSCode \u7f16\u7a0b\u3002\u7528\u6237\u53ef\u4ee5\u4ece\u5e93\u4e2d\u79fb\u690d BSP\uff08\u4e0b\u65b9\u9644\u6709\u94fe\u63a5\uff09\uff0c\u5e76\u76f8\u5e94\u5730\u5c06\u5176\u5408\u5e76\u5230\u5176\u9879\u76ee\u4e2d\u3002</p> <ul> <li> <p> MCU_BSP</p> <p>\u57fa\u4e8e STM32 \u7684 MCU BSP</p> <p>  Github Repo </p> </li> </ul>"},{"location":"zh/MAIN-CONTROL/BSP/bsp/#keil","title":"\u8bbe\u7f6e Keil \u4ee5\u83b7\u5f97\u66f4\u597d\u7684\u4f53\u9a8c","text":"<p>\u6253\u5f00 'Options for Target' \u5e76\u8fdb\u884c\u4ee5\u4e0b\u8bbe\u7f6e\uff1a</p>"},{"location":"zh/MAIN-CONTROL/BSP/bsp/#ac6","title":"\u4f7f\u7528 AC6 \u7f16\u8bd1\u5668","text":"<p>\u7531\u4e8e\u8fd9\u662f\u4e00\u4e2a\u65b0\u9879\u76ee\uff0c\u4e00\u5207\u90fd\u662f\u4ece AC6 \u7f16\u8bd1\u5668\u5f00\u59cb\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 AC6 \u8fdb\u884c\u7f16\u8bd1\u548c\u8c03\u8bd5\uff0c\u8fd9\u6bd4 AC5 \u7f16\u8bd1\u5668\u5feb\u5f97\u591a\u3002</p>"},{"location":"zh/MAIN-CONTROL/BSP/bsp/#_1","title":"\u91cd\u7f6e\u5e76\u8fd0\u884c","text":"<p>\u9009\u62e9 'Debug' \u9009\u9879\u5361\uff0c\u5728\u53f3\u4e0a\u89d2\u9009\u62e9 'Settings'\u3002\u5728 'Flash and Download' \u9009\u9879\u5361\u4e2d\uff0c\u9009\u62e9 'Reset and Run'\uff0c\u4ee5\u5728\u5c06\u7a0b\u5e8f\u4e0b\u8f7d\u5230\u677f\u4e0a\u540e\u81ea\u52a8\u91cd\u7f6e\u5e76\u8fd0\u884c\u7a0b\u5e8f\u3002\u8fd9\u5bf9\u7f16\u7a0b\u548c\u8c03\u8bd5\u975e\u5e38\u65b9\u4fbf\u3002</p>"},{"location":"zh/MAIN-CONTROL/BSP/bsp/#bsp_2","title":"\u5982\u4f55\u5c06 BSP \u96c6\u6210\u5230\u60a8\u7684\u9879\u76ee\u4e2d","text":""},{"location":"zh/MAIN-CONTROL/BSP/bsp/#1-bsp","title":"\u6b65\u9aa4 1\uff1a\u4e0b\u8f7d BSP","text":"<p>\u5c06 BSP git \u4ed3\u5e93\u514b\u9686\u5230\u672c\u5730\u5de5\u4f5c\u7a7a\u95f4\u3002</p> <pre><code>git clone https://github.com/Shuaiwen-Cui/MCU_BSP.git\n</code></pre>"},{"location":"zh/MAIN-CONTROL/BSP/bsp/#2-bsp","title":"\u6b65\u9aa4 2\uff1a\u5c06 BSP \u79fb\u52a8\u5230\u60a8\u7684\u9879\u76ee\u4e2d","text":"<p>\u53ea\u9009\u62e9 ''STM32-HAL-CUBEMX' \u6587\u4ef6\u5939\u5e76\u5c06\u5176\u79fb\u52a8\u5230\u60a8\u7684\u9879\u76ee\u76ee\u5f55\u4e2d\u3002</p>"},{"location":"zh/MAIN-CONTROL/BSP/bsp/#3-bsp","title":"\u6b65\u9aa4 3\uff1a\u5c06 BSP \u5305\u542b\u5230\u60a8\u7684\u9879\u76ee\u4e2d","text":"<p>\u6253\u5f00 Keil\uff0c\u9009\u62e9 'Options for Target' -&gt; 'C/C++' -&gt; 'Include Paths'\uff0c\u5c06 BSP \u6a21\u5757\u7684\u5404\u81ea\u8def\u5f84\u6dfb\u52a0\u5230\u60a8\u7684\u9879\u76ee\u5305\u542b\u8def\u5f84\u4e2d\u3002</p>"},{"location":"zh/MAIN-CONTROL/BSP/bsp/#4-bsp","title":"\u6b65\u9aa4 4\uff1a\u5c06 BSP \u6a21\u5757\u6dfb\u52a0\u5230\u60a8\u7684\u9879\u76ee\u4e2d","text":"<p>\u6253\u5f00 'Manage Project Items'\uff0c\u5c06\u5404\u81ea\u6a21\u5757\u6dfb\u52a0\u5230\u60a8\u7684\u9879\u76ee\u4e2d\u3002</p> <p>\u63d0\u793a</p> <p>\u5f53\u60a8\u6dfb\u52a0\u6587\u4ef6\u65f6\uff0c\u5c06\u6587\u4ef6\u7c7b\u578b\u66f4\u6539\u4e3a 'All Types'\uff0c\u4ee5\u4fbf\u5c06 '.h' \u548c '.c' \u6587\u4ef6\u4e00\u8d77\u5408\u5e76\u5230\u9879\u76ee\u4e2d\uff0c\u4ee5\u65b9\u4fbf\u4f7f\u7528\u3002</p>"},{"location":"zh/MAIN-CONTROL/BSP/bsp/#5-bsp_init-bsp","title":"\u6b65\u9aa4 5\uff1a\u5305\u542b\u5934\u6587\u4ef6\u5e76\u8c03\u7528 BSP_Init() \u51fd\u6570\u4ee5\u521d\u59cb\u5316 BSP","text":"<p>\u5728\u60a8\u7684\u4e3b\u51fd\u6570\u4e2d\u5305\u542b 'bsp_init.h' \u5934\u6587\u4ef6\uff0c\u5e76\u5728\u4e3b\u51fd\u6570\u4e2d\u8c03\u7528 'BSP_Init()' \u51fd\u6570\u4ee5\u521d\u59cb\u5316 BSP\u3002</p> <p>Tip</p> <p>\u5f53\u4fee\u6539\u4ee3\u7801\u7684\u65f6\u5019\uff0c\u8bf7\u5728'USER CODE BEGIN'\u548c'USER CODE END'\u4e4b\u95f4\u8fdb\u884c\u4fee\u6539\uff0c\u4ee5\u907f\u514d\u5728\u91cd\u65b0\u751f\u6210\u4ee3\u7801\u65f6\u4e22\u5931\u60a8\u7684\u4fee\u6539\u3002</p>"},{"location":"zh/MAIN-CONTROL/BSP/bsp/#bsp_3","title":"BSP \u6a21\u5757\u4ecb\u7ecd","text":"<p>Note</p> <p>\u4e3a\u4e86\u9ad8\u6548\u7ba1\u7406BSP\u6a21\u5757\uff0c\u6211\u521b\u5efa\u4e86\u4e00\u4e2a\u540d\u4e3a'bsp_init'\u7684\u63a7\u5236\u6a21\u5757\u3002'bsp_init'\u6a21\u5757\u8d1f\u8d23\u521d\u59cb\u5316\u6240\u6709BSP\u6a21\u5757\u5e76\u8bbe\u7f6e\u5fc5\u8981\u7684\u914d\u7f6e\u3002'bsp_init'\u6a21\u5757\u662f\u4e3b\u51fd\u6570\u4e2d\u7b2c\u4e00\u4e2a\u88ab\u8c03\u7528\u7684\u7528\u6237\u6a21\u5757\u3002</p> <p>\u8ba9\u6211\u4eec\u6765\u770b\u770b'bsp_init'\u6a21\u5757\uff1a</p>"},{"location":"zh/MAIN-CONTROL/BSP/bsp/#bsp_init","title":"BSP_INIT \u6a21\u5757\u8bf4\u660e","text":"<p>\u5982\u60a8\u6240\u89c1\uff0c\u51e0\u4e4e\u6240\u6709\u7684 BSP \u6a21\u5757\u90fd\u5728\u6b64\u6a21\u5757\u4e2d\u8fdb\u884c\u4e86\u914d\u7f6e\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u6ce8\u91ca\u76f8\u5e94\u7684\u6a21\u5757\u6765\u51b3\u5b9a\u662f\u5426\u6fc0\u6d3b\u6216\u505c\u7528\u8be5\u6a21\u5757\uff1a</p> <ul> <li>MODULE_ENABLE_LED\uff1a\u542f\u7528 LED \u6a21\u5757\u3002</li> <li>MODULE_ENABLE_KEY\uff1a\u542f\u7528\u6309\u952e\u6a21\u5757\u3002\u6ce8\u610f\uff0c\u8be5\u6a21\u5757\u5728\u672c\u9879\u76ee\u4e2d\u672a\u4f7f\u7528\uff0c\u56e0\u4e3a\u6b64\u5f00\u53d1\u677f\u4e0a\u6ca1\u6709\u53ef\u7f16\u7a0b\u6309\u952e\u3002\u4e0d\u8981\u542f\u7528\u6b64\u6a21\u5757\u3002</li> <li>MODULE_ENABLE_USART1\uff1a\u542f\u7528 USART1 \u6a21\u5757\u8fdb\u884c\u4e32\u884c\u901a\u4fe1\u3002\u5982\u679c\u542f\u7528\u4e86\u6b64\u6a21\u5757\uff0c\u6a21\u5757\u4e2d\u5b9a\u4e49\u7684 printf \u548c scanf \u7684\u91cd\u5b9a\u5411\u51fd\u6570\u5c06\u81ea\u52a8\u6fc0\u6d3b\u3002</li> <li>MODULE_ENABLE_SDRAM\uff1a\u542f\u7528 SDRAM \u6a21\u5757\u4ee5\u4f7f\u7528\u5916\u90e8 RAM \u8fdb\u884c\u8ba1\u7b97\u3002</li> <li>MODULE_ENABLE_MEMORY\uff1a\u542f\u7528\u5185\u5b58\u6a21\u5757\u4ee5\u5728 SDRAM \u4e0a\u8fdb\u884c\u5185\u5b58\u7ba1\u7406\u3002</li> <li>MODULE_ENABLE_SDCARD\uff1a\u542f\u7528 SD \u5361\u6a21\u5757\u6d4b\u8bd5 SD \u5361\u7684\u57fa\u672c IO\u3002\u6ce8\u610f\uff0c\u8be5\u6a21\u5757\u4e0d\u80fd\u4e0e MODULE_ENABLE_FILE \u4e00\u8d77\u4f7f\u7528\u3002</li> <li>MODULE_ENABLE_FILE\uff1a\u542f\u7528\u6587\u4ef6\u6a21\u5757\u6d4b\u8bd5 SD \u5361\u4e0a\u7684\u6587\u4ef6\u64cd\u4f5c\u3002\u6ce8\u610f\uff0c\u8be5\u6a21\u5757\u4e0d\u80fd\u4e0e MODULE_ENABLE_SDCARD \u4e00\u8d77\u4f7f\u7528\u3002</li> </ul>"},{"location":"zh/MAIN-CONTROL/BSP/bsp/#bsp_init_1","title":"BSP_INIT \u6a21\u5757\u914d\u7f6e\u63a8\u8350","text":"<p>\u4ee5\u4e0b\u8868\u683c\u4e3a BSP_INIT \u6a21\u5757\u7684\u63a8\u8350\u914d\u7f6e\uff1a</p> \u6a21\u5757\u540d\u79f0 \u914d\u7f6e MODULE_ENABLE_LED \u2705\u542f\u7528 MODULE_ENABLE_KEY \u274c\u7981\u7528 MODULE_ENABLE_USART1 \u2705\u542f\u7528 MODULE_ENABLE_SDRAM \u2705\u542f\u7528 MODULE_ENABLE_MEMORY \u2705\u542f\u7528 MODULE_ENABLE_SDCARD \u274c\u7981\u7528 MODULE_ENABLE_FILE \u2705\u542f\u7528"},{"location":"zh/MAIN-CONTROL/BSP/bsp/#_2","title":"\u6a21\u5757\u6d4b\u8bd5","text":"<p>\u4e3a\u4e86\u65b9\u4fbf\u8bc4\u4f30\u5df2\u914d\u7f6e\u7684\u6a21\u5757\uff0c\u5728 .h \u6587\u4ef6\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5b8f 'BSP_INIT_TEST'\u3002\u8be5\u6d4b\u8bd5\u7528\u4e8e\u6d4b\u8bd5\u5404\u6a21\u5757\u7684\u521d\u59cb\u5316\u3002\u5982\u679c\u60a8\u60f3\u7981\u7528\u6d4b\u8bd5\u4ee5\u8282\u7701\u65f6\u95f4\uff0c\u53ef\u4ee5\u5728 .h \u6587\u4ef6\u4e2d\u6ce8\u91ca\u6389 'BSP_INIT_TEST'\u3002</p>"},{"location":"zh/MAIN-CONTROL/FILE-SYS/file-sys/","title":"\u6587\u4ef6\u7cfb\u7edf (FILE SYSTEM)","text":"<p>Info</p> <p>\u6587\u4ef6\u7cfb\u7edf\u662f\u4e00\u79cd\u5b58\u50a8\u548c\u7ec4\u7ec7\u8ba1\u7b97\u673a\u6587\u4ef6\u53ca\u5176\u6570\u636e\u7684\u65b9\u6cd5\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u4f7f\u7528 FatFs \u5e93\u4e0e SD \u5361\u8fdb\u884c\u63a5\u53e3\u3002</p>"},{"location":"zh/MAIN-CONTROL/FILE-SYS/file-sys/#_1","title":"\u6587\u4ef6\u7cfb\u7edf\u4f5c\u4e3a\u4e2d\u95f4\u4ef6","text":"<p>\u5728 STM32CUBEMX\u4e2d\uff0cFATFS\u5df2\u7ecf\u4f5c\u4e3a\u4e2d\u95f4\u4ef6\u96c6\u6210\u5230\u8f6f\u4ef6\u4e2d\u3002\u8981\u542f\u7528FATFS\uff0c\u8bf7\u8f6c\u5230\u201c\u4e2d\u95f4\u4ef6\u201d\u9009\u9879\u5361\uff0c\u5e76\u542f\u7528\u201cFATFS\u201d\u4e2d\u95f4\u4ef6.</p> <p></p> <p>\u5982\u56fe\u6240\u793a\uff0c\u9009\u62e9SD\u5361\u7684FATFS\uff0c\u5e76\u542f\u7528\u957f\u6587\u4ef6\u540d\u652f\u6301\u3002</p> <p></p> <p>\u7136\u540e\uff0c\u5728\u9ad8\u7ea7\u8bbe\u7f6e\u4e0b\uff0c\u4e3aSD\u5361\u9009\u62e9DMA\u6a21\u677f\u3002</p>"},{"location":"zh/MAIN-CONTROL/FILE-SYS/file-sys/#_2","title":"\u751f\u6210\u4e0e\u66f4\u65b0\u4ee3\u7801","text":"<p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u751f\u6210\u4ee3\u7801\u4ee5\u4fdd\u5b58\u5f53\u524d\u8fdb\u5ea6\uff0c\u5e76\u4f7f\u5176\u51c6\u5907\u597d\u8fdb\u884c\u540e\u7eed\u7684\u7f16\u7a0b\u6b65\u9aa4\u3002\u70b9\u51fb\u5c4f\u5e55\u53f3\u4e0a\u89d2\u7684\u201c\u751f\u6210\u4ee3\u7801\u201d\u6309\u94ae\u3002</p>"},{"location":"zh/MAIN-CONTROL/FMC/fmc/","title":"\u7075\u6d3b\u5b58\u50a8\u63a7\u5236\u5668 (FMC)","text":"<p>Info</p> <p>FMC \u662f\u7075\u6d3b\u5b58\u50a8\u63a7\u5236\u5668\u7684\u7f29\u5199\u3002\u5b83\u662f\u4e00\u79cd\u529f\u80fd\uff0c\u5141\u8bb8 MCU \u4e0e\u5916\u90e8\u5b58\u50a8\u8bbe\u5907\uff08\u5982 SDRAM\u3001SRAM \u548c NOR Flash\uff09\u8fdb\u884c\u63a5\u53e3\u3002</p>"},{"location":"zh/MAIN-CONTROL/FMC/fmc/#fmc_1","title":"FMC \u8bbe\u7f6e","text":"<p>\u5982\u56fe\u6240\u793a\uff0c\u5728\u201c\u8fde\u63a5\u201d\u9009\u9879\u5361\u4e2d\uff0c\u542f\u7528 FMC\uff0c\u7136\u540e\u5728 FMC \u914d\u7f6e\u533a\u57df\u4e2d\u542f\u7528 SDRAM \u8bbe\u5907\uff0c\u5e76\u6839\u636e SDRAM \u8bbe\u5907\u7684\u6570\u636e\u8868\u8bbe\u7f6e\u53c2\u6570\u3002</p>"},{"location":"zh/MAIN-CONTROL/FMC/fmc/#sdram","title":"\u540c\u6b65\u52a8\u6001\u968f\u673a\u5b58\u50a8\u5668(SDRAM)","text":"<p>SDRAM \u662f\u4e00\u79cd\u5e38\u89c1\u7684\u5916\u90e8\u5b58\u50a8\u8bbe\u5907\u7c7b\u578b\uff0c\u53ef\u4ee5\u4f7f\u7528 FMC \u4e0e MCU \u8fdb\u884c\u63a5\u53e3\u3002\u5b83\u662f\u4e00\u79cd\u7528\u4e8e\u8ba1\u7b97\u673a\u548c\u5176\u4ed6\u7535\u5b50\u8bbe\u5907\u7684\u6613\u5931\u6027\u5b58\u50a8\u5668\u3002\u5728\u8fd9\u91cc\uff0c\u7531\u4e8e\u5185\u7f6e RAM \u4ec5\u4e3a 1MB\uff0c\u5bf9\u4e8e\u67d0\u4e9b\u5e94\u7528\u7a0b\u5e8f\u6765\u8bf4\u4e0d\u591f\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u5916\u90e8 SDRAM \u6765\u6269\u5c55\u5185\u5b58\u5bb9\u91cf\u3002</p>"},{"location":"zh/MAIN-CONTROL/FMC/fmc/#_1","title":"\u751f\u6210\u4e0e\u66f4\u65b0\u4ee3\u7801","text":"<p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u751f\u6210\u4ee3\u7801\u4ee5\u4fdd\u5b58\u5f53\u524d\u8fdb\u5ea6\uff0c\u5e76\u4f7f\u5176\u51c6\u5907\u597d\u8fdb\u884c\u540e\u7eed\u7684\u7f16\u7a0b\u6b65\u9aa4\u3002\u70b9\u51fb\u5c4f\u5e55\u53f3\u4e0a\u89d2\u7684\u201c\u751f\u6210\u4ee3\u7801\u201d\u6309\u94ae\u3002</p>"},{"location":"zh/MAIN-CONTROL/LED/led/","title":"\u53d1\u5149\u4e8c\u6781\u7ba1 (LED)","text":""},{"location":"zh/MAIN-CONTROL/LED/led/#led_1","title":"LED\u7535\u8def\u8bbe\u8ba1","text":""},{"location":"zh/MAIN-CONTROL/LED/led/#_1","title":"\u914d\u7f6e\u5f15\u811a","text":""},{"location":"zh/MAIN-CONTROL/LED/led/#_2","title":"\u9009\u62e9\u5e76\u8bbe\u7f6e\u5f15\u811a\u6a21\u5f0f","text":"<p>\u6839\u636e\u7535\u8def\u8bbe\u8ba1\uff0c\u9009\u62e9\u5bf9\u5e94\u7684\u5f15\u811aPH7\uff0c\u5e76\u5c06\u6a21\u5f0f\u8bbe\u7f6e\u4e3a\u201cGPIO\u8f93\u51fa\u201d\u3002</p>"},{"location":"zh/MAIN-CONTROL/LED/led/#gpio","title":"GPIO\u8bbe\u7f6e","text":"<p>\u5728\u6700\u5de6\u4fa7\u7684\u9762\u677f\u4e2d\uff0c\u9009\u62e9\u201cGPIO\u201d\u9009\u9879\u5361\uff0c\u5e76\u6309\u4e0b\u56fe\u6240\u793a\u4e3aPH7\u8bbe\u7f6e\u53c2\u6570\u3002</p> <ul> <li>GPIO\u8f93\u51fa\u7535\u5e73\uff1a\u4f4e</li> </ul> <p>Info</p> <p>\u4ece\u7535\u8def\u8bbe\u8ba1\u53ef\u4ee5\u770b\u51fa\uff0c\u4f4e\u7535\u5e73\u8f93\u51fa\u53ef\u4ee5\u70b9\u4eaeLED\uff0c\u800c\u9ad8\u7535\u5e73\u8f93\u51fa\u53ef\u4ee5\u5173\u95edLED\u3002</p> <ul> <li>GPIO\u6a21\u5f0f\uff1a\u8f93\u51fa</li> </ul> <p>\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u5f15\u811a\u6a21\u5f0f\u8bbe\u7f6e\u4e3a\u201c\u8f93\u51fa\u201d\uff0c\u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u5b83\u6765\u63a7\u5236LED\u3002</p> <ul> <li>GPIO\u4e0a\u62c9/\u4e0b\u62c9\uff1a\u4e0a\u62c9</li> </ul> <p>Info</p> <p>\u4e0a\u62c9\u7535\u963b\u7528\u4e8e\u786e\u4fdd\u5f15\u811a\u5728\u672a\u8fde\u63a5\u5230\u5730\u65f6\u5904\u4e8e\u9ad8\u7535\u5e73\u72b6\u6001\u3002</p> <ul> <li>GPIO\u901f\u5ea6\uff1a\u975e\u5e38\u9ad8</li> </ul> <p>Info</p> <p>GPIO\u5f15\u811a\u7684\u901f\u5ea6\u662f\u6307\u5f15\u811a\u4ece\u4e00\u79cd\u72b6\u6001\u8f6c\u6362\u5230\u53e6\u4e00\u79cd\u72b6\u6001\u7684\u901f\u5ea6\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u5176\u8bbe\u7f6e\u4e3a\u201c\u975e\u5e38\u9ad8\u201d\uff0c\u4ee5\u786e\u4fddLED\u80fd\u591f\u5feb\u901f\u6253\u5f00\u548c\u5173\u95ed\u3002LED\u5f15\u811a\u7684\u901f\u5ea6\u8bbe\u7f6e\u6ca1\u6709\u4e25\u683c\u8981\u6c42\uff0c\u4f46\u5efa\u8bae\u8bbe\u7f6e\u4e3a\u201c\u975e\u5e38\u9ad8\u201d\u4ee5\u83b7\u5f97\u66f4\u597d\u7684\u6027\u80fd\u3002</p> <ul> <li>\u7528\u6237\u6807\u7b7e\uff1aLED</li> </ul> <p>Info</p> <p>\u7528\u6237\u6807\u7b7e\u7528\u4e8e\u6807\u8bb0\u5f15\u811a\uff0c\u4ee5\u4fbf\u4e8e\u8bc6\u522b\u3002\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u5176\u8bbe\u7f6e\u4e3a\u201cLED\u201d\uff0c\u4ee5\u6307\u793a\u8be5\u5f15\u811a\u7528\u4e8e\u63a7\u5236LED\u3002</p>"},{"location":"zh/MAIN-CONTROL/LED/led/#_3","title":"\u751f\u6210\u4e0e\u66f4\u65b0\u4ee3\u7801","text":"<p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u751f\u6210\u4ee3\u7801\u4ee5\u4fdd\u5b58\u5f53\u524d\u8fdb\u5ea6\uff0c\u5e76\u4f7f\u5176\u51c6\u5907\u597d\u8fdb\u884c\u540e\u7eed\u7684\u7f16\u7a0b\u6b65\u9aa4\u3002\u70b9\u51fb\u5c4f\u5e55\u53f3\u4e0a\u89d2\u7684\u201c\u751f\u6210\u4ee3\u7801\u201d\u6309\u94ae\u3002</p>"},{"location":"zh/MAIN-CONTROL/MEMORY/memory/","title":"\u5185\u5b58\u7ba1\u7406","text":""},{"location":"zh/MAIN-CONTROL/RTOS/rtos/","title":"\u5b9e\u65f6\u64cd\u4f5c\u7cfb\u7edf (RTOS)","text":"<p>\u5f85\u66f4\u65b0\u3002</p>"},{"location":"zh/MAIN-CONTROL/SDCARD/sdcard/","title":"\u5b89\u5168\u6570\u5b57\u5b58\u50a8\u5361(SDCARD)","text":"<p>Info</p> <p>SDCARD\u662fSecure Digital Memory Card\u7684\u7f29\u5199\u3002\u5b83\u662f\u4e00\u79cd\u7528\u4e8e\u8ba1\u7b97\u673a\u548c\u5176\u4ed6\u7535\u5b50\u8bbe\u5907\u7684\u975e\u6613\u5931\u6027\u5b58\u50a8\u5361\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u4f7f\u7528SDMMC\u5916\u8bbe\u4e0eSD\u5361\u8fdb\u884c\u63a5\u53e3\u3002</p>"},{"location":"zh/MAIN-CONTROL/SDCARD/sdcard/#sdcard_1","title":"SDCARD\u7535\u8def","text":""},{"location":"zh/MAIN-CONTROL/SDCARD/sdcard/#sdcard_2","title":"SDCARD\u914d\u7f6e","text":"<p>\u8981\u542f\u7528SDCARD\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u6b64\u5f00\u53d1\u677f\u542f\u7528SDMMC\u3002\u5bf9\u4e8e\u5176\u4ed6\u4e00\u4e9b\u5f00\u53d1\u677f\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u542f\u7528SDMMC\u5916\u8bbe\u3002</p> <p>\u5bf9\u4e8eSDMMC\u914d\u7f6e\uff0c\u8bf7\u53c2\u8003SDMMC\u9009\u9879\u5361\u3002</p>"},{"location":"zh/MAIN-CONTROL/SDCARD/sdcard/#sdcard-gpio","title":"SDCARD GPIO","text":"<p>\u5bf9\u4e8eSD\u5361\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u9ed8\u8ba4\u7684GPIO\u5f15\u811a\u3002\u4f46\u662f\uff0c\u60a8\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u66f4\u6539GPIO\u5f15\u811a\u3002</p>"},{"location":"zh/MAIN-CONTROL/SDCARD/sdcard/#_1","title":"\u751f\u6210\u4e0e\u66f4\u65b0\u4ee3\u7801","text":"<p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u751f\u6210\u4ee3\u7801\u4ee5\u4fdd\u5b58\u5f53\u524d\u8fdb\u5ea6\uff0c\u5e76\u4f7f\u5176\u51c6\u5907\u597d\u8fdb\u884c\u540e\u7eed\u7684\u7f16\u7a0b\u6b65\u9aa4\u3002\u70b9\u51fb\u5c4f\u5e55\u53f3\u4e0a\u89d2\u7684\u201c\u751f\u6210\u4ee3\u7801\u201d\u6309\u94ae\u3002</p>"},{"location":"zh/MAIN-CONTROL/SDMMC/sdmmc/","title":"\u5b89\u5168\u6570\u5b57\u5b58\u50a8\u5361\u63a7\u5236\u5668(SDMMC)","text":"<p>Info</p> <p>SDMMC\u662fSecure Digital Memory Card\u7684\u7f29\u5199\u3002\u5b83\u662f\u4e00\u79cd\u7528\u4e8e\u8ba1\u7b97\u673a\u548c\u5176\u4ed6\u7535\u5b50\u8bbe\u5907\u7684\u975e\u6613\u5931\u6027\u5b58\u50a8\u5361\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u4f7f\u7528SDMMC\u5916\u8bbe\u4e0eSD\u5361\u8fdb\u884c\u63a5\u53e3\u3002</p>"},{"location":"zh/MAIN-CONTROL/SDMMC/sdmmc/#sdmmc_1","title":"\u542f\u7528SDMMC","text":"<p>\u5982\u56fe\u6240\u793a\uff0c\u5728\u201c\u8fde\u63a5\u201d\u9009\u9879\u5361\u4e2d\uff0c\u542f\u7528SDMMC\u5916\u8bbe\u3002\u8bf7\u6ce8\u610f\uff0c\u5206\u9891\u5668\u8bbe\u7f6e\u4e3a2\u3002\u8bf7\u6ce8\u610f\uff0c\u6b64\u65f6\u60a8\u53ef\u80fd\u9700\u8981\u5728\u201c\u65f6\u949f\u914d\u7f6e\u201d\u9009\u9879\u5361\u4e2d\u91cd\u65b0\u914d\u7f6e\u65f6\u949f\u8bbe\u7f6e\u3002</p>"},{"location":"zh/MAIN-CONTROL/SDMMC/sdmmc/#mdma","title":"\u542f\u7528MDMA","text":"<p>Info</p> <p>MDMA\u662fMemory Direct Memory Access\u7684\u7f29\u5199\u3002\u5b83\u662f\u4e00\u79cd\u7528\u4e8e\u5728\u5b58\u50a8\u5668\u548c\u5b58\u50a8\u5668\u4e4b\u95f4\u4f20\u8f93\u6570\u636e\u7684DMA\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u4f7f\u7528MDMA\u5728SD\u5361\u548cSDRAM\u4e4b\u95f4\u4f20\u8f93\u6570\u636e\u3002</p>"},{"location":"zh/MAIN-CONTROL/SDMMC/sdmmc/#nvic","title":"\u542f\u7528NVIC","text":"<p>\u5982\u56fe\u6240\u793a\uff0c\u5728\u201cNVIC\u8bbe\u7f6e\u201d\u9009\u9879\u5361\u4e2d\uff0c\u542f\u7528SDMMC\u4e2d\u65ad\u3002</p>"},{"location":"zh/MAIN-CONTROL/SDMMC/sdmmc/#nvic_1","title":"NVIC\u914d\u7f6e","text":"<p>\u5230\u76ee\u524d\u4e3a\u6b62\uff0cNVIC\u8bbe\u7f6e\u5982\u56fe\u6240\u793a\u3002</p>"},{"location":"zh/MAIN-CONTROL/SDMMC/sdmmc/#_1","title":"\u751f\u6210\u4e0e\u66f4\u65b0\u4ee3\u7801","text":"<p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u751f\u6210\u4ee3\u7801\u4ee5\u4fdd\u5b58\u5f53\u524d\u8fdb\u5ea6\uff0c\u5e76\u4f7f\u5176\u51c6\u5907\u597d\u8fdb\u884c\u540e\u7eed\u7684\u7f16\u7a0b\u6b65\u9aa4\u3002\u70b9\u51fb\u5c4f\u5e55\u53f3\u4e0a\u89d2\u7684\u201c\u751f\u6210\u4ee3\u7801\u201d\u6309\u94ae\u3002</p>"},{"location":"zh/MAIN-CONTROL/SDRAM/sdram/","title":"\u540c\u6b65\u52a8\u6001\u968f\u673a\u5b58\u50a8\u5668(SDRAM)","text":"<p>Info</p> <p>SDRAM \u662f\u540c\u6b65\u52a8\u6001\u968f\u673a\u5b58\u50a8\u5668\u7684\u7f29\u5199\u3002\u5b83\u662f\u4e00\u79cd\u7528\u4e8e\u8ba1\u7b97\u673a\u548c\u5176\u4ed6\u7535\u5b50\u8bbe\u5907\u7684\u6613\u5931\u6027\u5b58\u50a8\u5668\u3002\u5728\u8fd9\u91cc\uff0c\u7531\u4e8e\u5185\u7f6e RAM \u4ec5\u4e3a 1MB\uff0c\u5bf9\u4e8e\u67d0\u4e9b\u5e94\u7528\u7a0b\u5e8f\u6765\u8bf4\u4e0d\u591f\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u5916\u90e8 SDRAM \u6765\u6269\u5c55\u5185\u5b58\u5bb9\u91cf\u3002</p>"},{"location":"zh/MAIN-CONTROL/SDRAM/sdram/#sdram_1","title":"SDRAM \u7535\u8def","text":"<p>\u8bf7\u4ed4\u7ec6\u5c06\u5f15\u811a\u8bbe\u8ba1\u4e0eCUBEMX\u4e2d\u7684\u5f15\u811a\u8bbe\u7f6e\u8fdb\u884c\u6bd4\u8f83\uff0c\u786e\u4fdd\u5f15\u811a\u914d\u7f6e\u4e0e\u786c\u4ef6\u8fde\u63a5\u4e00\u81f4\u3002\u5728\u6211\u4eec\u7684\u6848\u4f8b\u4e2d\uff0c\u53ea\u6709PH2, PH3, PH5\u4e0d\u4e00\u81f4\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728\u53f3\u4fa7\u7684\u82af\u7247\u89c6\u56fe\u4e2d\u624b\u52a8\u8bbe\u7f6e\uff0c\u5e76\u6309\u7167\u8bbe\u8ba1\u5c06\u5176\u8bbe\u7f6e\u4e3a\u5404\u81ea\u7684\u529f\u80fd\u3002</p>"},{"location":"zh/MAIN-CONTROL/SDRAM/sdram/#sdram_2","title":"SDRAM \u53c2\u6570","text":"<p>\u6211\u4eec\u4f7f\u7528\u7684 SDRAM \u6a21\u5757\u662f WINBOND W9825G6KH-6I\u3002\u60a8\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u6570\u636e\u8868\u3002\u53c2\u6570\u662f\u6839\u636e\u6570\u636e\u8868\u8ba1\u7b97\u7684\u3002</p>"},{"location":"zh/MAIN-CONTROL/SDRAM/sdram/#gpio","title":"GPIO \u914d\u7f6e","text":"<p>\u68c0\u67e5\u5f15\u811a\u914d\u7f6e\u3002\u5c06 CUBEMX \u4e2d\u7684\u8bbe\u7f6e\u4e0e\u5f15\u811a\u8bbe\u8ba1\u8fdb\u884c\u6bd4\u8f83\u3002</p>"},{"location":"zh/MAIN-CONTROL/SDRAM/sdram/#_1","title":"\u751f\u6210\u4e0e\u66f4\u65b0\u4ee3\u7801","text":"<p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u751f\u6210\u4ee3\u7801\u4ee5\u4fdd\u5b58\u5f53\u524d\u8fdb\u5ea6\uff0c\u5e76\u4f7f\u5176\u51c6\u5907\u597d\u8fdb\u884c\u540e\u7eed\u7684\u7f16\u7a0b\u6b65\u9aa4\u3002\u70b9\u51fb\u5c4f\u5e55\u53f3\u4e0a\u89d2\u7684\u201c\u751f\u6210\u4ee3\u7801\u201d\u6309\u94ae\u3002</p>"},{"location":"zh/MAIN-CONTROL/SETUP/setup/","title":"\u521d\u59cb\u5316\u8bbe\u7f6e","text":"<p>Note</p> <p>'\u521d\u59cb\u5316\u8bbe\u7f6e' \u662f\u8bbe\u7f6e\u4e3b\u63a7\u7cfb\u7edf\u7684\u7b2c\u4e00\u6b65\uff0c\u4f7f\u5f97\u7cfb\u7edf\u80fd\u591f\u8fd0\u884c\u57fa\u672c\u529f\u80fd\u3002 \u672c\u8282\u91cd\u70b9\u4ecb\u7ecd\u4e3b\u63a7\u677f\u7684\u57fa\u672c\u8bbe\u7f6e\u3002</p>"},{"location":"zh/MAIN-CONTROL/SETUP/setup/#_2","title":"\u786c\u4ef6\u51c6\u5907","text":"<p>\u4e3a\u4e86\u7f16\u7a0b\u4e3b\u63a7\u677f\uff0c\u6211\u4eec\u9700\u8981\u4e09\u4e2a\u7ec4\u4ef6\uff1a</p> <ul> <li>\u4e3b\u63a7\u677f - \u5d4c\u5165 MCU \u7684\u5f00\u53d1\u677f</li> <li>USB-TTL \u9002\u914d\u5668 - \u5c06\u4e3b\u63a7\u677f\u8fde\u63a5\u5230\u8ba1\u7b97\u673a</li> <li>\u8c03\u8bd5\u5668\uff08ST-LINK V2\u3001J-LINK \u7b49\uff09 - \u7528\u4e8e\u7f16\u7a0b\u4e3b\u63a7\u677f</li> </ul>"},{"location":"zh/MAIN-CONTROL/SETUP/setup/#1-fanke743","title":"\u7ec4\u4ef6 1 - \u4e3b\u63a7\u677f - FANKE743","text":"<ul> <li> <p> \u4ea7\u54c1\u94fe\u63a5</p> <p>\u4ea7\u54c1\u94fe\u63a5</p> <p>  Purchase Link </p> </li> </ul>"},{"location":"zh/MAIN-CONTROL/SETUP/setup/#2-usb-ttl","title":"\u7ec4\u4ef6 2 - USB-TTL \u9002\u914d\u5668","text":"<ul> <li> <p> \u4ea7\u54c1\u94fe\u63a5</p> <p>\u4ea7\u54c1\u94fe\u63a5</p> <p>  Purchase Link </p> </li> </ul>"},{"location":"zh/MAIN-CONTROL/SETUP/setup/#3-","title":"\u7ec4\u4ef6 3 - \u8c03\u8bd5\u5668","text":"<ul> <li> <p> \u4ea7\u54c1\u94fe\u63a5</p> <p>\u4ea7\u54c1\u94fe\u63a5</p> <p>  Purchase Link </p> </li> </ul> <p>Info</p> <p>CMSIS-DAP, ST-LINK, J-LINK\u7b49\u8c03\u8bd5\u5668\u90fd\u53ef\u4ee5\u7528\u4e8e\u7f16\u7a0b\u4e3b\u63a7\u677f\u3002\u4efb\u4f55\u4e00\u79cd\u8c03\u8bd5\u5668\u90fd\u53ef\u4ee5\u7528\u6765\u5bf9\u4e3b\u63a7\u677f\u8fdb\u884c\u7f16\u7a0b\u3002</p>"},{"location":"zh/MAIN-CONTROL/SETUP/setup/#_3","title":"\u786c\u4ef6\u8fde\u63a5","text":"<p>\u5c06\u4e09\u4e2a\u7ec4\u4ef6\u6309\u7167\u4e0a\u56fe\u6240\u793a\u8fdb\u884c\u8fde\u63a5\u3002\u7136\u540e\u5c06 USB-TTL \u9002\u914d\u5668\u8fde\u63a5\u5230\u8ba1\u7b97\u673a\u7684 USB \u7aef\u53e3\uff0c\u5c06\u8c03\u8bd5\u5668\u8fde\u63a5\u5230\u8ba1\u7b97\u673a\u7684 USB \u7aef\u53e3\u3002</p>"},{"location":"zh/MAIN-CONTROL/SETUP/setup/#_4","title":"\u8f6f\u4ef6\u51c6\u5907","text":""},{"location":"zh/MAIN-CONTROL/SETUP/setup/#stm32cubemx","title":"STM32CUBEMX","text":"<p>STM32CUBEMX \u662f\u4e00\u4e2a\u56fe\u5f62\u5316\u5de5\u5177\uff0c\u5141\u8bb8\u975e\u5e38\u8f7b\u677e\u5730\u914d\u7f6e STM32 \u5fae\u63a7\u5236\u5668\uff0c\u5e76\u901a\u8fc7\u5206\u6b65\u8fc7\u7a0b\u751f\u6210\u76f8\u5e94\u7684\u521d\u59cb\u5316 C \u4ee3\u7801\u3002\u53ef\u4ee5\u4ece \u5b98\u65b9\u7f51\u7ad9 \u4e0b\u8f7d\u5e76\u5b89\u88c5 STM32CubeMX\u3002</p>"},{"location":"zh/MAIN-CONTROL/SETUP/setup/#keil-mdk","title":"KEIL MDK","text":"<p>KEIL MDK \u662f\u4e00\u4e2a\u9002\u7528\u4e8e\u5e7f\u6cdb\u7684 ARM Cortex-M \u7cfb\u5217\u5fae\u63a7\u5236\u5668\u8bbe\u5907\u7684\u5b8c\u6574\u8f6f\u4ef6\u5f00\u53d1\u73af\u5883\u3002\u53ef\u4ee5\u4ece \u5b98\u65b9\u7f51\u7ad9 \u4e0b\u8f7d\u5e76\u5b89\u88c5 KEIL MDK\u3002</p>"},{"location":"zh/MAIN-CONTROL/SETUP/setup/#_5","title":"\u8f6f\u4ef6\u8bbe\u7f6e","text":""},{"location":"zh/MAIN-CONTROL/SETUP/setup/#stm32cubemx_1","title":"\u5728 STM32CUBEMX \u4e2d\u521b\u5efa\u65b0\u9879\u76ee","text":""},{"location":"zh/MAIN-CONTROL/SETUP/setup/#_6","title":"\u65b0\u5efa\u9879\u76ee","text":"<p>\u6253\u5f00 STM32CubeMX\uff0c\u70b9\u51fb\u201c\u6587\u4ef6\u201d\u9009\u9879\u5361\uff0c\u7136\u540e\u9009\u62e9\u201c\u65b0\u5efa\u9879\u76ee\u201d\u9009\u9879\u3002</p>"},{"location":"zh/MAIN-CONTROL/SETUP/setup/#mcu","title":"\u9009\u62e9 MCU \u7cfb\u5217\u548c\u578b\u53f7","text":"<p>\u9009\u62e9 MCU \u7cfb\u5217\u548c MCU \u578b\u53f7\u3002\u7136\u540e\u70b9\u51fb\u201c\u5f00\u59cb\u9879\u76ee\u201d\u3002</p>"},{"location":"zh/MAIN-CONTROL/SETUP/setup/#_7","title":"\u542f\u7528\u5185\u5b58\u4fdd\u62a4\u5355\u5143","text":"<p>\u542f\u7528\u201c\u5185\u5b58\u4fdd\u62a4\u5355\u5143\u201d\uff0c\u5e76\u70b9\u51fb\u201cYES\u201d\u3002</p>"},{"location":"zh/MAIN-CONTROL/SETUP/setup/#_8","title":"\u9879\u76ee\u4fe1\u606f\u548c\u4ee3\u7801\u751f\u6210\u914d\u7f6e","text":"<p>\u9996\u5148\u6309\u7167\u4e0a\u56fe\u6240\u793a\u8bbe\u7f6e\u9879\u76ee\u4fe1\u606f\u548c\u4ee3\u7801\u751f\u6210\u914d\u7f6e\u3002\u7136\u540e\u70b9\u51fb\u201c\u751f\u6210\u4ee3\u7801\u201d\u3002</p>"},{"location":"zh/MAIN-CONTROL/SETUP/setup/#_9","title":"\u7cfb\u7edf\u914d\u7f6e","text":"<p>\u8ba9\u6211\u4eec\u56de\u5230 Pinout &amp; Configuration\uff08\u5f15\u811a\u914d\u7f6e\uff09\u9009\u9879\u5361\uff0c\u5e76\u6309\u7167\u4e0b\u56fe\u914d\u7f6e\u7cfb\u7edf\u3002</p>"},{"location":"zh/MAIN-CONTROL/SETUP/setup/#-sys","title":"\u7cfb\u7edf\u6838\u5fc3 - SYS: \u65f6\u95f4\u57fa\u51c6\u6e90","text":"<p>\u9009\u62e9\u201cSYS\u201d\u9009\u9879\u5361\uff0c\u7136\u540e\u5c06\u201c\u65f6\u95f4\u57fa\u51c6\u6e90\u201d\u9009\u62e9\u4e3a\u201cSysTick\u201d\u3002</p>"},{"location":"zh/MAIN-CONTROL/SETUP/setup/#-rcc-hse-lse","title":"\u7cfb\u7edf\u6838\u5fc3 - RCC: \u9ad8\u901f\u65f6\u949f (HSE) \u548c\u4f4e\u901f\u65f6\u949f (LSE)","text":"<p>\u9009\u62e9\u201cRCC\u201d\u9009\u9879\u5361\uff0c\u5e76\u6309\u7167\u4e0a\u56fe\u914d\u7f6e\u201c\u9ad8\u901f\u65f6\u949f (HSE)\u201d\u548c\u201c\u4f4e\u901f\u65f6\u949f (LSE)\u201d\u3002\u4e24\u8005\u5747\u8bbe\u7f6e\u4e3a\u201c\u6676\u4f53/\u9676\u74f7\u8c10\u632f\u5668\u201d\u3002\u901a\u5e38\u6765\u8bf4\uff0c\u5916\u90e8\u6676\u632f\u6bd4\u5185\u90e8 RC \u632f\u8361\u5668\u66f4\u7cbe\u786e\u3002</p>"},{"location":"zh/MAIN-CONTROL/SETUP/setup/#-coretex_m7-i-cached-cache-mpu","title":"\u7cfb\u7edf\u6838\u5fc3 - CORETEX_M7: \u542f\u7528 I-Cache\u3001D-Cache \u548c MPU","text":"<p>\u9009\u62e9\u201cCORETEX_M7\u201d\u9009\u9879\u5361\uff0c\u5e76\u6309\u7167\u4e0a\u56fe\u542f\u7528\u201cI-Cache\u201d\u3001\u201cD-Cache\u201d\u548c\u201cMPU\u201d\u3002\u67d0\u4e9b\u9ad8\u7ea7\u529f\u80fd\u9700\u8981\u542f\u7528 I-Cache\u3001D-Cache \u548c MPU\uff0c\u4f8b\u5982 X-CUBE-AI\u3002</p>"},{"location":"zh/MAIN-CONTROL/SETUP/setup/#-rtc-rtc","title":"\u5b9a\u65f6\u5668 - RTC: \u542f\u7528 RTC","text":"<p>\u9009\u62e9\u201cRTC\u201d\u9009\u9879\u5361\uff0c\u5e76\u6309\u7167\u4e0a\u56fe\u542f\u7528\u201cRTC\u201d\u3002RTC \u662f\u4e00\u4e2a\u5b9e\u65f6\u65f6\u949f\uff0c\u53ef\u4ee5\u7528\u4e8e\u8ddf\u8e2a\u5f53\u524d\u65f6\u95f4\u548c\u65e5\u671f\u3002\u8fd9\u91cc\u6211\u4eec\u542f\u7528 RTC \u4ee5\u5907\u5c06\u6765\u7684\u5e94\u7528\u3002</p>"},{"location":"zh/MAIN-CONTROL/SETUP/setup/#-debug","title":"\u8ddf\u8e2a\u548c\u8c03\u8bd5 - DEBUG: \u542f\u7528\u4e32\u884c\u7ebf","text":"<p>\u9009\u62e9\u201cDEBUG\u201d\u9009\u9879\u5361\uff0c\u5e76\u6309\u7167\u4e0a\u56fe\u542f\u7528\u201c\u4e32\u884c\u7ebf\u201d\u3002\u4e32\u884c\u7ebf\u662f\u4e00\u79cd\u8c03\u8bd5\u63a5\u53e3\uff0c\u5141\u8bb8\u8c03\u8bd5\u5668\u4e0e MCU \u901a\u4fe1\u3002</p>"},{"location":"zh/MAIN-CONTROL/SETUP/setup/#_10","title":"\u65f6\u949f\u914d\u7f6e","text":"<p>\u6309\u7167\u4e0a\u56fe\u914d\u7f6e\u65f6\u949f\u3002\u65f6\u949f\u914d\u7f6e\u5bf9 MCU \u6b63\u5e38\u8fd0\u884c\u81f3\u5173\u91cd\u8981\u3002</p> <p>Note</p> <p>\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u5df2\u7ecf\u5b8c\u6210\u4e86MCU\u7684\u57fa\u672c\u914d\u7f6e\uff0c\u53ef\u4ee5\u6700\u540e\u68c0\u67e5\u4e00\u4e0b\u76ee\u524d\u7684\u914d\u7f6e\u7136\u540e\u70b9\u51fb\u201c\u751f\u6210\u4ee3\u7801\u201d\u6309\u94ae\u751f\u6210\u4ee3\u7801\u3002\u6211\u4eec\u4f1a\u5728\u63a5\u4e0b\u6765\u7684\u7ae0\u8282\u4e2d\u7ee7\u7eed\u914d\u7f6e\u8f6f\u4ef6\u73af\u5883\u3002</p> <p>Tip</p> <p>\u7b80\u6d01\u8d77\u89c1\uff0c\u6211\u6ca1\u6709\u5728\u6b64\u5904\u5c55\u793a\u6240\u6709\u7684\u914d\u7f6e\u9009\u9879\u3002\u76f8\u53cd\uff0c\u8fd9\u4e9b\u914d\u7f6e\u6839\u636e\u5404\u81ea\u529f\u80fd\u88ab\u5206\u6210\u4e86\u51e0\u4e2a\u90e8\u5206\u5206\u6563\u5728\u4e0d\u540c\u7ae0\u8282\u4e2d\u3002\u5728\u5b9e\u8df5\u4e2d\uff0c\u53ef\u4ee5\u628a\u6240\u6709\u9700\u8981\u7528\u5230\u7684\u914d\u7f6e\u4e00\u6b21\u6027\u914d\u7f6e\u5b8c\u6210\u3002</p>"},{"location":"zh/MAIN-CONTROL/SETUP/setup/#_11","title":"\u751f\u6210\u4e0e\u66f4\u65b0\u4ee3\u7801","text":"<p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u751f\u6210\u4ee3\u7801\u4ee5\u4fdd\u5b58\u5f53\u524d\u8fdb\u5ea6\uff0c\u5e76\u4f7f\u5176\u51c6\u5907\u597d\u8fdb\u884c\u540e\u7eed\u7684\u7f16\u7a0b\u6b65\u9aa4\u3002\u70b9\u51fb\u5c4f\u5e55\u53f3\u4e0a\u89d2\u7684\u201c\u751f\u6210\u4ee3\u7801\u201d\u6309\u94ae\u3002</p>"},{"location":"zh/MAIN-CONTROL/USART/usart/","title":"\u901a\u7528\u540c\u6b65/\u5f02\u6b65\u6536\u53d1\u5668\uff08USART\uff09","text":"<p>USART\u53ef\u4ee5\u7528\u4e8e\u591a\u79cd\u4e0d\u540c\u7684\u7528\u9014\uff0c\u76ee\u524d\u6211\u4eec\u53ea\u4f7f\u7528USART1\u8fdb\u884c\u4e32\u884c\u901a\u4fe1\u3002</p>"},{"location":"zh/MAIN-CONTROL/USART/usart/#usart1","title":"USART1\u7535\u8def","text":"<p>\u4ece\u7535\u8def\u8bbe\u8ba1\u53ef\u4ee5\u770b\u51fa\uff0cUSART1\u7684RX\u548cTX\u5206\u522b\u662fPA9\u548cPA10\u3002\u7136\u800c\uff0c\u9ed8\u8ba4\u9009\u62e9\u7684\u5f15\u811a\u5e76\u4e0d\u662f\u8fd9\u4e24\u4e2a\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5728\u5c4f\u5e55\u53f3\u4fa7\u7684\u5f15\u811a\u914d\u7f6e\u4e2d\u624b\u52a8\u66f4\u6539\u5b83\u4eec\u3002</p>"},{"location":"zh/MAIN-CONTROL/USART/usart/#usart1_1","title":"USART1\u914d\u7f6e","text":""},{"location":"zh/MAIN-CONTROL/USART/usart/#_1","title":"\u53c2\u6570\u8bbe\u7f6e","text":"<p>\u9009\u62e9\u201c\u53c2\u6570\u8bbe\u7f6e\u201d\u4ee5\u8bbe\u7f6eUSART1\u7684\u53c2\u6570\u3002\u6211\u4eec\u6682\u65f6\u4fdd\u6301\u9ed8\u8ba4\u8bbe\u7f6e\u3002</p>"},{"location":"zh/MAIN-CONTROL/USART/usart/#dma","title":"DMA\u8bbe\u7f6e","text":"<p>Info</p> <p>DMA\u4ee3\u8868\u76f4\u63a5\u5b58\u50a8\u5668\u8bbf\u95ee\uff08Direct Memory Access\uff09\u3002\u8fd9\u662f\u4e00\u4e2a\u5141\u8bb8\u5916\u8bbe\u5728\u4e0d\u6d89\u53caCPU\u7684\u60c5\u51b5\u4e0b\u8bbf\u95ee\u5185\u5b58\u7684\u529f\u80fd\u3002\u8fd9\u6837\u53ef\u4ee5\u5927\u5927\u51cf\u5c11CPU\u8d1f\u8f7d\u5e76\u63d0\u9ad8\u7cfb\u7edf\u6027\u80fd\u3002</p> <p></p> <p>\u6211\u4eec\u4e3aUSART1\u521b\u5efa\u4e24\u4e2aDMA\u901a\u9053\uff0c\u4e00\u4e2a\u7528\u4e8e\u53d1\u9001\u6570\u636e\uff0c\u53e6\u4e00\u4e2a\u7528\u4e8e\u63a5\u6536\u6570\u636e\u3002</p>"},{"location":"zh/MAIN-CONTROL/USART/usart/#nvic","title":"NVIC\u8bbe\u7f6e","text":"<p>Info</p> <p>NVIC\u4ee3\u8868\u5d4c\u5957\u5411\u91cf\u4e2d\u65ad\u63a7\u5236\u5668\uff08Nested Vectored Interrupt Controller\uff09\u3002\u8fd9\u662f\u4e00\u4e2a\u5141\u8bb8MCU\u5bf9\u4e2d\u65ad\u8fdb\u884c\u4f18\u5148\u7ea7\u6392\u5e8f\u5e76\u9ad8\u6548\u7ba1\u7406\u7684\u529f\u80fd\u3002</p> <p></p> <p>\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u542f\u7528USART1\u7684\u5168\u5c40\u4e2d\u65ad\u3002\u8bf7\u6ce8\u610f\uff0c\u5bf9\u4e8eDMA\uff0c\u4e00\u65e6\u542f\u7528DMA\u901a\u9053\uff0c\u4e2d\u65ad\u5c06\u9ed8\u8ba4\u542f\u7528\u3002</p> <p>\u6700\u540e\uff0c\u8ba9\u6211\u4eec\u751f\u6210\u4ee3\u7801\u4ee5\u4fdd\u5b58\u5f53\u524d\u8fdb\u5ea6\uff0c\u5e76\u4e3a\u540e\u7eed\u7f16\u7a0b\u6b65\u9aa4\u505a\u597d\u51c6\u5907\u3002\u5355\u51fb\u5c4f\u5e55\u53f3\u4e0a\u89d2\u7684\u201c\u751f\u6210\u4ee3\u7801\u201d\u6309\u94ae\u3002</p>"},{"location":"zh/MAIN-CONTROL/USART/usart/#_2","title":"\u751f\u6210\u4e0e\u66f4\u65b0\u4ee3\u7801","text":"<p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u751f\u6210\u4ee3\u7801\u4ee5\u4fdd\u5b58\u5f53\u524d\u8fdb\u5ea6\uff0c\u5e76\u4f7f\u5176\u51c6\u5907\u597d\u8fdb\u884c\u540e\u7eed\u7684\u7f16\u7a0b\u6b65\u9aa4\u3002\u70b9\u51fb\u5c4f\u5e55\u53f3\u4e0a\u89d2\u7684\u201c\u751f\u6210\u4ee3\u7801\u201d\u6309\u94ae\u3002</p>"},{"location":"zh/PERCEPTION/perception/","title":"\u4f20\u611f","text":""},{"location":"zh/POWER/power/","title":"\u7535\u6e90","text":"<p>\u521d\u6b65\u5f00\u53d1\u9636\u6bb5\uff0c\u6211\u4eec\u4f7f\u7528USB\u6570\u636e\u7ebf\u6765\u4e3aMCU\u4f9b\u7535\u3002\u5728\u5c06\u6765\u7684\u5f00\u53d1\u4e2d\uff0c\u5c06\u4f7f\u7528\u7535\u6c60\u4f9b\u7535\u5e76\u6574\u5408\u7535\u6e90\u7ba1\u7406\u3002</p>"},{"location":"zh/RELEASES/releases/","title":"\u53d1\u5e03","text":"<p>\u4ee5\u4e0b\u662f\u8be5\u9879\u76ee\u63d0\u4f9b\u7684\u4e0d\u540c\u7248\u672c\uff0c\u4ee5\u6ee1\u8db3\u4e0d\u540c\u7684\u4f7f\u7528\u573a\u666f\u3002\u4e0b\u8868\u5217\u51fa\u4e86\u53ef\u7528\u7684\u7248\u672c\u53ca\u5176\u76f8\u5e94\u7684\u529f\u80fd\u3002</p> \u7248\u672c\uff08\u6587\u4ef6\u5939\u540d\u79f0\uff09 \u63cf\u8ff0 \u529f\u80fd \u72b6\u6001 \u5907\u6ce8 NODE-CORE-BUILDING \u8be5\u7248\u672c\u4e13\u6ce8\u4e8e\u8ba1\u7b97\u6838\u5fc3\u7684\u5f00\u53d1\uff0c\u5c55\u793a\u6838\u5fc3\u7ec4\u4ef6\u7684\u5f00\u53d1\u8fdb\u5ea6\u3002 \u8ba1\u7b97\u6838\u5fc3\u5f00\u53d1 - \u8fc7\u7a0b\u89c6\u89d2 \ud83c\udfd7\ufe0f \u672a\u51c6\u5907\u597d - NODE-CORE-BUILT \u8be5\u7248\u672c\u4e13\u6ce8\u4e8e\u8ba1\u7b97\u6838\u5fc3\u7684\u5f00\u53d1\uff0c\u5c55\u793a\u5df2\u7ecf\u5f00\u53d1\u597d\u7684\u8ba1\u7b97\u6838\u5fc3\u3002 \u8ba1\u7b97\u6838\u5fc3\u5f00\u53d1 - \u5b8c\u6210\u89c6\u89d2 \u2705 \u7a33\u5b9a \ud83c\udfc6 \u63a8\u8350 NODE-CORE-RTOS-BUILDING \u8be5\u7248\u672c\u4e13\u6ce8\u4e8e\u5e26\u6709RTOS\u7684\u8ba1\u7b97\u6838\u5fc3\u7684\u5f00\u53d1\uff0c\u5c55\u793a\u6838\u5fc3\u7ec4\u4ef6\u7684\u5f00\u53d1\u8fdb\u5ea6\u3002 \u5e26\u6709RTOS\u7684\u8ba1\u7b97\u6838\u5fc3\u5f00\u53d1 - \u8fc7\u7a0b\u89c6\u89d2 \ud83c\udfd7\ufe0f \u672a\u51c6\u5907\u597d - NODE-CORE-RTOS-BUILT \u8be5\u7248\u672c\u4e13\u6ce8\u4e8e\u5e26\u6709RTOS\u7684\u8ba1\u7b97\u6838\u5fc3\u7684\u5f00\u53d1\uff0c\u5c55\u793a\u5df2\u7ecf\u5f00\u53d1\u597d\u7684\u8ba1\u7b97\u6838\u5fc3\u3002 \u5e26\u6709RTOS\u7684\u8ba1\u7b97\u6838\u5fc3\u5f00\u53d1 - \u5b8c\u6210\u89c6\u89d2 \ud83c\udfd7\ufe0f \u672a\u51c6\u5907\u597d -"}]}